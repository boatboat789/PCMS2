package dao.implement;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import Test.utilities.StringHandler;
import dao.KPIReportDao;
import entities.CFMDetail;
import entities.KPIReportDetail;
import model.BeanCreateModel;
import th.in.totemplate.core.sql.Database;

public class KPIReportDaoImpl implements KPIReportDao {
	private BeanCreateModel bcModel = new BeanCreateModel();
	private Database database;
	private String message;
	@SuppressWarnings("unused")
	private String conType;

	private String declareTempFromMainSaleProd = ""
			+ " If(OBJECT_ID('tempdb..#tempFromMainSaleProd') Is Not Null)\r\n"
			+ "	begin\r\n"
			+ "		Drop Table #tempFromMainSaleProd;\r\n"
			+ "	end ;\r\n"
			+ " SELECT \r\n"
			+ "	   a.[Division]\r\n"
			+ "	  ,a.[SaleOrder]\r\n"
			+ "	  ,a.[SaleLine]\r\n"
			+ "	  ,a.[CustomerShortName]\r\n"
			+ "	  ,a.[PurchaseOrder]\r\n"
			+ "	  ,a.[MaterialNo]\r\n"
			+ "	  ,a.[CustomerMaterial]\r\n"
			+ "	  ,a.[DueDate] \r\n"
			+ "	  ,a.PODate\r\n"
			+ "	  ,a.GreigeUpdate \r\n"
			+ "	  ,a.CFMUpdate \r\n"
			+ "	  ,a.[SaleCreateDate] \r\n"
			+ "	  ,a.SOASFacApproved \r\n"
			+ "	  ,a.[OrderSheetPrintDate]  \r\n"
			+ "	  ,a.[ProductionOrder]\r\n"
			+ "	  ,a.[LotNo]\r\n"
			+ "	  	,a.[PrdCreateDate]  \r\n"
			+ "	  	,a.[POPostingDateDefault] \r\n"
			+ "	  	,a.[GreigeInDate]  \r\n"
			+ "	  	,a.[BCDate] \r\n"
			+ "	  	,a.[Prepare] \r\n"
			+ "	  	,a.[Unwind]  \r\n"
			+ "	  	,a.[Relax]  \r\n"
			+ "	  ,a.[Preset] \r\n"
			+ "	  ,a.[InspectAfterPreset] \r\n"
			+ "	  ,a.[DyeActual] \r\n"
			+ "	  ,a.[Centifuge] \r\n"
			+ "	  ,a.[Scutcher] \r\n"
			+ "	  ,a.[Dryer] \r\n"
			+ "	  ,a.[LabFinish] \r\n"
			+ "	  ,a.[Slitting] \r\n"
			+ "	  ,a.[CFMNo] as [CFMNoMini]\r\n"
			+ "	  ,a.[CFMNumber] as CFMNumberMini\r\n"
			+ "	  ,a.[CFMSendDate] as CFMSendDateMini\r\n"
			+ "	  ,a.[CFMAnswerDate] as CFMAnswerDateMini\r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputBKKDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				  a.[CFMSendDate] <= [Date] and [Date] <= a.[CFMAnswerDate] \r\n"
			+ "		) AS DaysCFMAnswerDate\r\n"
			+ "	  ,a.[CFMStatus] as CFMStatusMini\r\n"
			+ "	  ,a.[CFMRemark] as CFMRemarkMini \r\n"
			+ "	  ,a.[RollNoRemark] as RollNoRemarkMini \r\n" 
			+ "	  ,a.[Finishing] \r\n"
			+ "	  ,a.[Inspectation] \r\n"
			+ "	  ,a.[Packing] \r\n"
			+ "	  ,a.UserStatus\r\n"
			+ "	  ,A.[IsWaitLot]\r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputBKKDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				  A.PODate <= [Date] and [Date] <= A.GreigeUpdate \r\n"
			+ "		) AS DaysGreigeUpDate\r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputBKKDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				  A.GreigeUpdate <= [Date] and [Date] <= A.CFMUpdate \r\n"
			+ "		) AS DaysCFMUpdate \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputBKKDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				  A.CFMUpdate <= [Date] and [Date] <= A.[SaleCreateDate] \r\n"
			+ "		) AS DaysSaleCreateDate\r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputBKKDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				  A.[SaleCreateDate] <= [Date] and [Date] <= A.SOASFacApproved \r\n"
			+ "		) AS DaysSOASFacApproved\r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputBKKDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				  A.SOASFacApproved <= [Date] and [Date] <= A.[OrderSheetPrintDate] \r\n"
			+ "		) AS DaysOrderSheetDate   \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[OrderSheetPrintDate] <= [Date] and [Date] <= A.PrdCreateDate \r\n"
			+ "		) AS DaysPrdCreateDate  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				  A.PrdCreateDate <= [Date] and [Date] <=  A.POPostingDateDefault\r\n"
			+ "		) AS DaysPOPostingDateDefault  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.POPostingDateDefault <= [Date] and [Date] <= A.GreigeInDate \r\n"
			+ "		) AS DaysGreigeInDate  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.GreigeInDate <= [Date] and [Date] <= A.[BCDate] \r\n"
			+ "		) AS DaysBCDate  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[BCDate] <= [Date] and [Date] <= A.[Prepare] \r\n"
			+ "		) AS DaysPrepare \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Prepare] <= [Date] and [Date] <= A.[Unwind] \r\n"
			+ "		) AS DaysUnwind \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Unwind] <= [Date] and [Date] <= A.[Relax] \r\n"
			+ "		) AS DaysRelax  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Relax] <= [Date] and [Date] <= A.[Preset] \r\n"
			+ "		) AS DaysPreset  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Preset] <= [Date] and [Date] <= A.[InspectAfterPreset] \r\n"
			+ "		) AS DaysInspectAfterPreset  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[InspectAfterPreset] <= [Date] and [Date] <= A.[DyeActual] \r\n"
			+ "		) AS DaysDyeActual  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[DyeActual] <= [Date] and [Date] <= A.[Centifuge]\r\n"
			+ "		 ) AS DaysCentifuge  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Centifuge] <= [Date] and [Date] <= A.[Scutcher]\r\n"
			+ "		 ) AS DaysScutcher  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Scutcher] <= [Date] and [Date] <= A.[Dryer]\r\n"
			+ "		 ) AS DaysDryer \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Dryer] <= [Date] and [Date] <= A.[LabFinish]\r\n"
			+ "		 ) AS DaysLabFinish  \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[LabFinish] <= [Date] and [Date] <= A.[Slitting]\r\n"
			+ "		 ) AS DaysSlitting   \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[CFMAnswerDate] <= [Date] and [Date] <= A.[Finishing]\r\n"
			+ "		 ) AS DaysFinishing \r\n" 
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Finishing] <= [Date] and [Date] <= A.[Inspectation]\r\n"
			+ "		 ) AS DaysInspectation \r\n"
			+ "	  , ( SELECT COUNT(ID) FROM [PPMM].[dbo].[InputDateRunning] \r\n"
			+ "			WHERE [NormalWork] = 'O' AND \r\n"
			+ "				   A.[Inspectation] <= [Date] and [Date] <= A.[Packing] \r\n"
			+ "		 ) AS DaysPacking\r\n"
			+ "into #tempFromMainSaleProd\r\n"
			+ "FROM (\r\n"
			+ "	SELECT  \r\n"
			+ "		FSMS.[Division]\r\n"
			+ "	  ,FSMS.[SaleOrder]\r\n"
			+ "	  ,FSMS.[SaleLine]\r\n"
			+ "	  ,FSMS.[CustomerShortName]\r\n"
			+ "	  ,FSMS.[PurchaseOrder]\r\n"
			+ "	  ,FSMS.[MaterialNo]\r\n"
			+ "	  ,FSMS.[CustomerMaterial]\r\n"
			+ "	  ,FSMS.[DueDate] \r\n"
			+ "	  ,CAST( SDR.[PO_DATE] AS Date ) as PODate\r\n"
			+ "	  ,CAST( SDR.[GREIGE_UPDATED] AS Date ) as GreigeUpdate \r\n"
			+ "	  ,CAST( SDR.[CFM_UPDATED] AS Date ) as  CFMUpdate \r\n"
			+ "	  ,CAST( FSMS.[SaleCreateDate] AS Date ) as [SaleCreateDate] \r\n"
			+ "	  ,CAST( SDS.[STEP_APPV_ON] AS Date ) as SOASFacApproved \r\n"
			+ "	  ,CAST( FSMS.[OrderSheetPrintDate] AS Date ) as [OrderSheetPrintDate]  \r\n"
			+ "	,CASE  \r\n"
			+ "		WHEN FSMP.[ProductionOrder] is not null THEN 'N'  \r\n"
			+ "		ELSE 'Y'  \r\n"
			+ "		END AS [IsWaitLot]  \r\n"
			+ "	,CASE  \r\n"
			+ "		WHEN FSMP.[ProductionOrder] is not null THEN FSMP.[ProductionOrder]  \r\n"
			+ "		WHEN SUBSTRING (FSMS.[MaterialNo], 1, 1) = 'V' THEN 'รับจ้างถัก'\r\n"
			+ "		WHEN z.[CheckBill] > 0 THEN 'Lot ขายแล้ว'\r\n"
			+ "		WHEN FSMS.[SaleStatus] = 'C' THEN 'ขาย stock'\r\n"
			+ "		ELSE 'รอจัด Lot'  \r\n"
			+ "		END AS [ProductionOrder]  \r\n"
			+ "	,CASE  \r\n"
			+ "		WHEN FSMP.[ProductionOrder] is not null THEN FSMP.[LotNo] \r\n"
			+ "		WHEN SUBSTRING (FSMS.[MaterialNo], 1, 1) = 'V' THEN 'รับจ้างถัก'\r\n"
			+ "		WHEN z.[CheckBill] > 0 THEN 'Lot ขายแล้ว'\r\n"
			+ "		WHEN FSMS.[SaleStatus] = 'C' THEN 'ขาย stock'\r\n"
			+ "		ELSE 'รอจัด Lot'  \r\n"
			+ "		END AS [LotNo]   \r\n"
			+ "	  ,FSMP.[PrdCreateDate]  \r\n"
			+ "	  ,TPWD.[POPostingDateDefault] \r\n"
			+ "	  ,FSMP.[GreigeInDate]  \r\n"
			+ "	  ,FSMP.[BCDate] \r\n"
			+ "	  ,TPWD.[Prepare] \r\n"
			+ "	  ,TPWD.[Unwind]  \r\n"
			+ "	  ,TPWD.[Relax]  \r\n"
			+ "	  ,TPWD.[Preset] \r\n"
			+ "	  ,TPWD.[InspectAfterPreset] \r\n"
			+ "	  ,TPWD.[DyeActual] \r\n"
			+ "	  ,TPWD.[Centifuge] \r\n"
			+ "	  ,TPWD.[Scutcher] \r\n"
			+ "	  ,TPWD.[Dryer] \r\n"
			+ "	  ,TPWD.[LabFinish] \r\n"
			+ "	  ,TPWD.[Slitting]\r\n"
			+ "   ,FSCFM.[CFMNo]\r\n"
			+ "   ,FSCFM.[CFMNumber]\r\n"
			+ "	  ,FSCFM.[CFMSendDate]\r\n"
			+ "	  ,FSCFM.[CFMAnswerDate]\r\n"
			+ "	  ,FSCFM.[CFMStatus]\r\n"
			+ "	  ,FSCFM.[CFMRemark]\r\n"
			+ "	  ,FSCFM.[RollNoRemark]  \r\n" 
			+ "	  ,TPWD.[Finishing] \r\n"
			+ "	  ,TPWD.[Inspectation] \r\n"
			+ "	  ,TPWD.[Packing] \r\n"
			+ "	  ,FSMP.UserStatus\r\n"
			+ "	FROM [PCMS].[dbo].[FromSapMainSale] as FSMS\r\n"
			+ "	LEFT JOIN [PPMM].[dbo].[SOR_IF_SAP_SOR_DUE_REPORT] AS SDR ON SDR.[SO_NO] = FSMS.[SaleOrder] AND\r\n"
			+ "																left(concat(SDR.[SO_LINE],'000000'),6) = FSMS.[SaleLine]\r\n"
			+ "																--RIGHT('000000'+ISNULL(SDR.[SO_LINE],''),6) = FSMS.[SaleLine]\r\n"
			+ "	LEFT JOIN [PPMM].[dbo].[SOAS_SO_DOC_STEP] AS SDS ON SDS.[SALES_ORDER_NO] = FSMS.[SaleOrder] \r\n"
			+ "	LEFT JOIN [PCMS].[dbo].[FromSapMainProd] AS FSMP ON FSMP.[SaleOrder] = FSMS.[SaleOrder] AND \r\n"
			+ "                                                     FSMP.[SaleLine] = FSMS.[SaleLine] \r\n"
			+ "	LEFT JOIN [PCMS].[dbo].[TEMP_ProdWorkDate] AS TPWD ON TPWD.[ProductionOrder] = FSMP.[ProductionOrder]  \r\n"
			+ "	left join ( \r\n"
			+ "		SELECT distinct [SaleOrder],[SaleLine] ,1 as [CheckBill] \r\n"
			+ "		FROM [PCMS].[dbo].[FromSapMainBillBatch]\r\n"
			+ "		where DataStatus = 'O'\r\n"
			+ "		group by [SaleOrder],[SaleLine]\r\n"
			+ "	) as z on FSMS.[SaleOrder] = z.[SaleOrder] AND\r\n"
			+ "           FSMS.[SaleLine] = z.[SaleLine]  \r\n" 
			+ " LEFT join [PCMS].[dbo].[FromSapCFM] as FSCFM ON FSMP.[ProductionOrder] = FSCFM.[ProductionOrder] and\r\n"
			+ "                                                 FSCFM.[DataStatus] = 'O' \r\n"
			+ "	where ( FSMP.[DataStatus] = 'O' or FSMP.[DataStatus] is NULL )  AND\r\n"
			+ "		  FSMS.[DataStatus] = 'O' AND \r\n"
			+ "		  FSMS.[DueDate] >= DATEFROMPARTS ( DATEPART(yyyy, GETDATE()) - 1, 1, 1 )  and\r\n"
			+ "		  ( FSCFM.[DataStatus] = 'O' or FSCFM.[DataStatus] is null ) \r\n"
			+ ") AS A    \r\n";

	public KPIReportDaoImpl(Database database, String conType) {
		this.database = database;
		this.message = "";
		this.conType = conType;
	}

	@Override
	public ArrayList<CFMDetail> getCFMDetail(ArrayList<KPIReportDetail> poList) {
		ArrayList<CFMDetail> list = null;
		String where = " where  "; 
		KPIReportDetail bean = new KPIReportDetail();
		String tmpWhere = "";
		if ( ! poList.isEmpty()) {
			String tmpProd = "";
			for (int i = 0; i < poList.size(); i ++ ) {
				bean = poList.get(i);
				tmpProd += "'" + bean.getProductionOrder() + "'";
				if (i < poList.size()-1) {
					tmpProd += ",";
				}

			}
			tmpWhere += " ( ProductionOrder IN ( \r\n"; 
			tmpWhere = tmpWhere+tmpProd;
			tmpWhere = tmpWhere + " ) ) \r\n"; 
		}
		where += tmpWhere + " and\r\n" + "	a.[DataStatus] = 'O' \r\n";
		String sql = " "
				+ " SELECT DISTINCT  \r\n"
				+ "    [ProductionOrder]"
				+ "   ,[CFMNo]"
				+ "   ,[CFMNumber]\r\n"
				+ "   ,[CFMSendDate]\r\n"
				+ "   ,[CFMAnswerDate]\r\n"
				+ "   ,[CFMStatus]\r\n"
				+ "   ,[CFMRemark]\r\n"
				+ "   ,[Da]\r\n"
				+ "   ,[Db]\r\n"
				+ "   ,[L]\r\n"
				+ "   ,[ST]\r\n"
				+ "   ,[SaleOrder]\r\n"
				+ "   ,CASE PATINDEX('%[^0 ]%',a.[SaleLine]  + ' ‘')\r\n"
				+ "			WHEN 0 THEN ''  \r\n"
				+ "			ELSE SUBSTRING(a.[SaleLine] , PATINDEX('%[^0 ]%',a.[SaleLine]  + ' '), LEN(a.[SaleLine] ) )\r\n"
				+ "			END AS [SaleLine] "
				+ "   ,[CFMCheckLab]\r\n"
				+ "   ,[CFMNextLab]\r\n"
				+ "   ,[CFMCheckLot]\r\n"
				+ "   ,[CFMNextLot]\r\n"
				+ "   ,[NextLot]\r\n"
				+ "   ,[SOChange]\r\n"
				+ "   ,[SOChangeQty]\r\n"
				+ "   ,[SOChangeUnit]\r\n"
				+ "   ,[RollNo]\r\n"
				+ "   ,[RollNoRemark]\r\n"
				+ "   ,a.[DataStatus]\r\n"
				+ "   ,[DE]\r\n"
				+ " from [PCMS].[dbo].[FromSapCFM] as a \r\n "
				+ where
				+ " Order by [ProductionOrder] ,[CFMNo]";

		List<Map<String, Object>> datas = this.database.queryList(sql);
		list = new ArrayList<>();
		for (Map<String, Object> map : datas) {
			list.add(this.bcModel._genCFMDetail(map));
		}
		return list;
	}

	@Override
	public ArrayList<KPIReportDetail> getKPIReportDetail(ArrayList<KPIReportDetail> poList) {
		ArrayList<KPIReportDetail> list = null;
		String whereRP = "";
		String whereMain = "";
//		String whereOP = "";
		KPIReportDetail bean = poList.get(0);
		String po = bean.getPurchaseOrder();
		String saleCreateDate = bean.getSaleCreateDate();
		String dueDate = bean.getDueDate();
		String so = bean.getSaleOrder();
		String matNo = bean.getMaterialNo();
		String prodCreateDate = bean.getPrdCreateDate();
		String prodOrder = bean.getProductionOrder();
		if ( ! po.equals("")) {
			whereRP = StringHandler.addStringAndIfNotEmpty(whereRP);
			whereRP += " ( a.[PurchaseOrder] like '%" + po + "%' ) \r\n";

			whereMain = StringHandler.addStringAndIfNotEmpty(whereMain);
			whereMain += " ( a.[PurchaseOrder] like '%" + po + "%' ) \r\n";
		}
		if ( ! so.equals("")) {
			whereRP = StringHandler.addStringAndIfNotEmpty(whereRP);
			whereRP += " ( a.[SaleOrder] like '%" + so + "%' ) \r\n";

			whereMain = StringHandler.addStringAndIfNotEmpty(whereMain);
			whereMain += " ( a.[SaleOrder] like '%" + so + "%' ) \r\n";
		}
		if ( ! matNo.equals("")) {
			whereRP = StringHandler.addStringAndIfNotEmpty(whereRP);
			whereRP += " ( a.[MaterialNo] like '%" + matNo + "%' ) \r\n";

			whereMain = StringHandler.addStringAndIfNotEmpty(whereMain);
			whereMain += " ( a.[MaterialNo] like '%" + matNo + "%' ) \r\n";
		}
		if ( ! prodOrder.equals("")) {
			whereRP = StringHandler.addStringAndIfNotEmpty(whereRP);
			whereRP += " ( C.[ProductionOrder] like '%" + prodOrder + "%' ) \r\n";

			whereMain = StringHandler.addStringAndIfNotEmpty(whereMain);
			whereMain += " ( a.[ProductionOrder] like '%" + prodOrder + "%' ) \r\n";
		}
		if ( ! saleCreateDate.equals("")) {
			whereRP = StringHandler.addStringAndIfNotEmpty(whereRP);
			String[] array = saleCreateDate.split(" - ");
			whereRP += " "
					+ " ( a.[SaleCreateDate] >= convert(date,'" + array[0] + "', 103) AND \r\n"
					+ "   a.[SaleCreateDate] <= convert(date,'" + array[1] + "', 103) ) \r\n";

			whereMain = StringHandler.addStringAndIfNotEmpty(whereMain);
			whereMain += " "
					+ " ( a.[SaleCreateDate] >= convert(date,'" + array[0] + "', 103) AND \r\n"
					+ " a.[SaleCreateDate] <= convert(date,'" + array[1] + "', 103) ) \r\n";
		}
		if ( ! dueDate.equals("")) {
			whereRP = StringHandler.addStringAndIfNotEmpty(whereRP);
			String[] array = dueDate.split(" - ");
			whereRP += " "
					+ " ( a.[DueDate] >= convert(date,'" + array[0] + "', 103) AND\r\n"
					+ "   a.[DueDate] <= convert(date,'" + array[1] + "', 103) ) \r\n";

			whereMain = StringHandler.addStringAndIfNotEmpty(whereMain);
			whereMain += " "
					+ " ( a.[DueDate] >= convert(date,'" + array[0] + "', 103) AND \r\n"
					+ "   a.[DueDate] <= convert(date,'" + array[1] + "', 103) ) \r\n";
		}
		if ( ! prodCreateDate.equals("")) {
			whereRP = StringHandler.addStringAndIfNotEmpty(whereRP);
			String[] array = prodCreateDate.split(" - ");
			whereRP += " "
					+ " ( c.[PrdCreateDate] >= convert(date,'" + array[0] + "', 103) AND \r\n"
					+ "   c.[PrdCreateDate] <= convert(date,'" + array[1] + "', 103) ) \r\n";

			whereMain = StringHandler.addStringAndIfNotEmpty(whereMain);
			whereMain += " "
					+ " ( a.[PrdCreateDate] >= convert(date,'" + array[0] + "', 103) AND\r\n"
					+ "   a.[PrdCreateDate] <= convert(date,'" + array[1] + "', 103) ) \r\n";
		}
		if ( ! whereRP.equals("")) {
			whereRP = " and " + whereRP;
		}
		if ( ! whereMain.equals("")) {
			whereMain = " and " + whereMain;
		}
		String sql = ""
				+ this.declareTempFromMainSaleProd
				+ " SELECT *\r\n"
				+ " FROM (\r\n"
				+ "		SELECT DISTINCT \r\n"
				+ "    a.[Division]\r\n"
				+ "	  ,a.[SaleOrder]\r\n"
				+ "	  ,a.[SaleLine]\r\n"
				+ "	  ,a.[CustomerShortName]\r\n"
				+ "	  ,a.[PurchaseOrder]\r\n"
				+ "	  ,a.[MaterialNo]\r\n"
				+ "	  ,a.[CustomerMaterial]\r\n"
				+ "	  ,a.[DueDate] \r\n"
				+ "	  ,a.PODate\r\n"
				+ "	  ,a.GreigeUpdate \r\n"
				+ "	  ,a.CFMUpdate \r\n"
				+ "	  ,a.[SaleCreateDate] \r\n"
				+ "	  ,a.SOASFacApproved \r\n"
				+ "	  ,a.[OrderSheetPrintDate]  \r\n"
				+ "	  ,c.[ProductionOrder]\r\n"
				+ "	  ,c.[LotNo]\r\n"
				+ "	  ,C.[PrdCreateDate]  \r\n"
				+ "	  ,C.[POPostingDateDefault] \r\n"
				+ "	  ,C.[GreigeInDate]  \r\n"
				+ "	  ,C.[BCDate] \r\n"
				+ "	  ,C.[Prepare] \r\n"
				+ "	  ,C.[Unwind]  \r\n"
				+ "	  ,C.[Relax]  \r\n"
				+ "	  ,C.[Preset] \r\n"
				+ "	  ,C.[InspectAfterPreset] \r\n"
				+ "	  ,C.[DyeActual] \r\n"
				+ "	  ,C.[Centifuge] \r\n"
				+ "	  ,C.[Scutcher] \r\n"
				+ "	  ,C.[Dryer] \r\n"
				+ "	  ,C.[LabFinish] \r\n"
				+ "	  ,C.[Slitting] \r\n"
				+ "	  ,C.[CFMNoMini]\r\n"
				+ "	  ,C.[CFMNumberMini]\r\n"
				+ "	  ,C.[CFMSendDateMini]\r\n"
				+ "	  ,C.[CFMAnswerDateMini]\r\n"
				+ "	  ,C.[CFMStatusMini]\r\n"
				+ "	  ,C.[CFMRemarkMini]\r\n"
				+ "	  ,C.[RollNoRemarkMini] \r\n"
				+ "	  ,C.[Finishing] \r\n"
				+ "	  ,C.[Inspectation] \r\n"
				+ "	  ,C.[Packing] \r\n"
				+ "	  ,C.UserStatus\r\n"
				+ "	  ,C.[IsWaitLot]\r\n"
				+ "	  ,a.DaysGreigeUpDate\r\n"
				+ "	  ,a.DaysCFMUpdate \r\n"
				+ "	  ,a.DaysSaleCreateDate\r\n"
				+ "	  ,a.DaysSOASFacApproved\r\n"
				+ "   ,a.DaysPrdCreateDate\r\n"
				+ "	  ,a.DaysOrderSheetDate   \r\n"
				+ "	  ,C.DaysPOPostingDateDefault  \r\n"
				+ "	  ,C.DaysGreigeInDate  \r\n"
				+ "	  ,C.DaysBCDate  \r\n"
				+ "	  ,C.DaysPrepare \r\n"
				+ "	  ,C.DaysUnwind \r\n"
				+ "	  ,C.DaysRelax  \r\n"
				+ "	  ,C.DaysPreset  \r\n"
				+ "	  ,C.DaysInspectAfterPreset  \r\n"
				+ "	  ,C.DaysDyeActual  \r\n"
				+ "	  ,C.DaysCentifuge  \r\n"
				+ "	  ,C.DaysScutcher  \r\n"
				+ "	  ,C.DaysDryer \r\n"
				+ "	  ,C.DaysLabFinish  \r\n"
				+ "	  ,C.DaysSlitting   \r\n"
				+ "	  ,C.DaysFinishing \r\n"
				+ "	  ,C.DaysInspectation \r\n"
				+ "	  ,C.DaysPacking\r\n"
				+ "   ,   'Replaced' as TypePrd \r\n"
				+ "   ,c.DaysCFMAnswerDate\r\n"
				+ "   FROM #tempFromMainSaleProd as a \r\n"
				+ "	inner join ( \r\n"
				+ "		select SaleOrder , SaleLine, [ProductionOrderRP] AS ProductionOrder,DataStatus \r\n"
				+ "		from [PCMS].[dbo].[ReplacedProdOrder] \r\n"
				+ "		where [DataStatus] = 'O' \r\n"
				+ "	)  as B on a.SaleLine = B.SaleLine and \r\n"
				+ "            a.SaleOrder = B.SaleOrder \r\n"
				+ "	inner join #tempFromMainSaleProd as C on C.[ProductionOrder] = B.ProductionOrder \r\n"
				+ " WHERE ( C.UserStatus IS NULL OR C.UserStatus <> 'ยกเลิก' ) AND  \r\n"
				+ "		  ( B.ProductionOrder is not null  )\r\n"
				+ whereRP
				+ "UNION ALL\r\n"
				+ "   SELECT DISTINCT a.[Division]\r\n"
				+ "	  ,a.[SaleOrder]\r\n"
				+ "	  ,a.[SaleLine]\r\n"
				+ "	  ,a.[CustomerShortName]\r\n"
				+ "	  ,a.[PurchaseOrder]\r\n"
				+ "	  ,a.[MaterialNo]\r\n"
				+ "	  ,a.[CustomerMaterial]\r\n"
				+ "	  ,a.[DueDate] \r\n"
				+ "	  ,a.PODate\r\n"
				+ "	  ,a.GreigeUpdate \r\n"
				+ "	  ,a.CFMUpdate \r\n"
				+ "	  ,a.[SaleCreateDate] \r\n"
				+ "	  ,a.SOASFacApproved \r\n"
				+ "	  ,a.[OrderSheetPrintDate]  \r\n"
				+ "	  ,c.[ProductionOrder]\r\n"
				+ "	  ,c.[LotNo]\r\n"
				+ "	  ,c.[PrdCreateDate]  \r\n"
				+ "	  ,c.[POPostingDateDefault] \r\n"
				+ "	  ,c.[GreigeInDate]  \r\n"
				+ "	  ,c.[BCDate] \r\n"
				+ "	  ,c.[Prepare] \r\n"
				+ "	  ,c.[Unwind]  \r\n"
				+ "	  ,c.[Relax]  \r\n"
				+ "	  ,c.[Preset] \r\n"
				+ "	  ,c.[InspectAfterPreset] \r\n"
				+ "	  ,c.[DyeActual] \r\n"
				+ "	  ,c.[Centifuge] \r\n"
				+ "	  ,c.[Scutcher] \r\n"
				+ "	  ,c.[Dryer] \r\n"
				+ "	  ,c.[LabFinish] \r\n"
				+ "	  ,c.[Slitting] \r\n"
				+ "	  ,c.[CFMNoMini]\r\n"
				+ "	  ,c.[CFMNumberMini]\r\n"
				+ "	  ,c.[CFMSendDateMini]\r\n"
				+ "	  ,c.[CFMAnswerDateMini]\r\n"
				+ "	  ,c.[CFMStatusMini]\r\n"
				+ "	  ,c.[CFMRemarkMini]\r\n"
				+ "	  ,c.[RollNoRemarkMini] \r\n"
				+ "	  ,c.[Finishing] \r\n"
				+ "	  ,c.[Inspectation] \r\n"
				+ "	  ,c.[Packing] \r\n"
				+ "	  ,c.UserStatus\r\n"
				+ "	  ,c.[IsWaitLot]\r\n"
				+ "	  ,a.DaysGreigeUpDate\r\n"
				+ "	  ,a.DaysCFMUpdate \r\n"
				+ "	  ,a.DaysSaleCreateDate\r\n"
				+ "	  ,a.DaysSOASFacApproved\r\n"
				+ "   ,a.DaysPrdCreateDate\r\n"
				+ "	  ,a.DaysOrderSheetDate   \r\n"
				+ "	  ,c.DaysPOPostingDateDefault  \r\n"
				+ "	  ,c.DaysGreigeInDate  \r\n"
				+ "	  ,c.DaysBCDate  \r\n"
				+ "	  ,c.DaysPrepare \r\n"
				+ "	  ,c.DaysUnwind \r\n"
				+ "	  ,c.DaysRelax  \r\n"
				+ "	  ,c.DaysPreset  \r\n"
				+ "	  ,c.DaysInspectAfterPreset  \r\n"
				+ "	  ,c.DaysDyeActual  \r\n"
				+ "	  ,c.DaysCentifuge  \r\n"
				+ "	  ,c.DaysScutcher  \r\n"
				+ "	  ,c.DaysDryer \r\n"
				+ "	  ,c.DaysLabFinish  \r\n"
				+ "	  ,c.DaysSlitting   \r\n"
				+ "	  ,c.DaysFinishing \r\n"
				+ "	  ,c.DaysInspectation \r\n"
				+ "	  ,c.DaysPacking\r\n"
				+ "   ,  'OrderPuang' as TypePrd \r\n"
				+ "   ,c.DaysCFMAnswerDate\r\n"
				+ "   FROM [PCMS].[dbo].[FromSapMainProdSale] as b\r\n"
				+ "   inner join #tempFromMainSaleProd as a on a.[SaleOrder] = b.[SaleOrder] and\r\n"
				+ "                                           "
				+ ""
				+ " a.[SaleLine] = b.[SaleLine]\r\n"
				+ "   inner join #tempFromMainSaleProd as c on c.[ProductionOrder] = b.[ProductionOrder] \r\n"
				+ "   where b.DataStatus = 'O' and  \r\n"
				+ "			( c.UserStatus <> 'ยกเลิก' ) \r\n"
				+ whereRP
				+ "UNION ALL\r\n"
				+ "SELECT  DISTINCT a.[Division]\r\n"
				+ "	  ,a.[SaleOrder]\r\n"
				+ "	  ,a.[SaleLine]\r\n"
				+ "	  ,a.[CustomerShortName]\r\n"
				+ "	  ,a.[PurchaseOrder]\r\n"
				+ "	  ,a.[MaterialNo]\r\n"
				+ "	  ,a.[CustomerMaterial]\r\n"
				+ "	  ,a.[DueDate] \r\n"
				+ "	  ,a.PODate\r\n"
				+ "	  ,a.GreigeUpdate \r\n"
				+ "	  ,a.CFMUpdate \r\n"
				+ "	  ,a.[SaleCreateDate] \r\n"
				+ "	  ,a.SOASFacApproved \r\n"
				+ "	  ,a.[OrderSheetPrintDate]  \r\n"
				+ "	  ,a.[ProductionOrder]\r\n"
				+ "	  ,c.[LotNo]\r\n"
				+ "	  ,c.[PrdCreateDate]  \r\n"
				+ "	  ,c.[POPostingDateDefault] \r\n"
				+ "	  ,c.[GreigeInDate]  \r\n"
				+ "	  ,c.[BCDate] \r\n"
				+ "	  ,c.[Prepare] \r\n"
				+ "	  ,c.[Unwind]  \r\n"
				+ "	  ,c.[Relax]  \r\n"
				+ "	  ,c.[Preset] \r\n"
				+ "	  ,c.[InspectAfterPreset] \r\n"
				+ "	  ,c.[DyeActual] \r\n"
				+ "	  ,c.[Centifuge] \r\n"
				+ "	  ,c.[Scutcher] \r\n"
				+ "	  ,c.[Dryer] \r\n"
				+ "	  ,c.[LabFinish] \r\n"
				+ "	  ,c.[Slitting] \r\n"
				+ "	  ,c.[CFMNoMini]\r\n"
				+ "	  ,c.[CFMNumberMini]\r\n"
				+ "	  ,c.[CFMSendDateMini]\r\n"
				+ "	  ,c.[CFMAnswerDateMini]\r\n"
				+ "	  ,c.[CFMStatusMini]\r\n"
				+ "	  ,c.[CFMRemarkMini]\r\n"
				+ "	  ,c.[RollNoRemarkMini] \r\n"
				+ "	  ,c.[Finishing] \r\n"
				+ "	  ,c.[Inspectation] \r\n"
				+ "	  ,c.[Packing] \r\n"
				+ "	  ,c.UserStatus\r\n"
				+ "	  ,c.[IsWaitLot]\r\n"
				+ "	  ,a.DaysGreigeUpDate\r\n"
				+ "	  ,a.DaysCFMUpdate \r\n"
				+ "	  ,a.DaysSaleCreateDate\r\n"
				+ "	  ,a.DaysSOASFacApproved\r\n"
				+ "   ,a.DaysPrdCreateDate\r\n"
				+ "	  ,a.DaysOrderSheetDate   \r\n"
				+ "	  ,c.DaysPOPostingDateDefault  \r\n"
				+ "	  ,c.DaysGreigeInDate  \r\n"
				+ "	  ,c.DaysBCDate  \r\n"
				+ "	  ,c.DaysPrepare \r\n"
				+ "	  ,c.DaysUnwind \r\n"
				+ "	  ,c.DaysRelax  \r\n"
				+ "	  ,c.DaysPreset  \r\n"
				+ "	  ,c.DaysInspectAfterPreset  \r\n"
				+ "	  ,c.DaysDyeActual  \r\n"
				+ "	  ,c.DaysCentifuge  \r\n"
				+ "	  ,c.DaysScutcher  \r\n"
				+ "	  ,c.DaysDryer \r\n"
				+ "	  ,c.DaysLabFinish  \r\n"
				+ "	  ,c.DaysSlitting   \r\n"
				+ "	  ,c.DaysFinishing \r\n"
				+ "	  ,c.DaysInspectation \r\n"
				+ "	  ,c.DaysPacking\r\n"
				+ "   ,  'Switch' as TypePrd \r\n"
				+ "   ,c.DaysCFMAnswerDate\r\n"
				+ "FROM (\r\n"
				+ " 	SELECT \r\n"
				+ "			CASE \r\n"
				+ "				WHEN B.ProductionOrderSW IS NOT NULL THEN B.ProductionOrderSW\r\n"
				+ "				ELSE C.ProductionOrder\r\n"
				+ "			END AS [ProductionOrder]\r\n"
				+ "			,tfmsp.[Division]\r\n"
				+ "			,a.[SaleOrder]\r\n"
				+ "			,a.[SaleLine]\r\n"
				+ "			,tfmsp.[CustomerShortName]\r\n"
				+ "			,tfmsp.[PurchaseOrder]\r\n"
				+ "			,tfmsp.[MaterialNo]\r\n"
				+ "			,tfmsp.[CustomerMaterial]\r\n"
				+ "			,tfmsp.[DueDate] \r\n"
				+ "			,tfmsp.PODate\r\n"
				+ "			,tfmsp.GreigeUpdate \r\n"
				+ "			,tfmsp.CFMUpdate \r\n"
				+ "			,tfmsp.[SaleCreateDate] \r\n"
				+ "			,tfmsp.SOASFacApproved \r\n"
				+ "			,tfmsp.[OrderSheetPrintDate]  \r\n"
				+ "	  ,tfmsp.DaysGreigeUpDate\r\n"
				+ "	  ,tfmsp.DaysCFMUpdate \r\n"
				+ "	  ,tfmsp.DaysSaleCreateDate\r\n"
				+ "	  ,tfmsp.DaysSOASFacApproved\r\n"
				+ "	  ,tfmsp.DaysOrderSheetDate  \r\n"
				+ "   ,tfmsp.DaysPrdCreateDate\r\n"
				+ "   	FROM [PCMS].[dbo].[FromSapMainProdSale] as a\r\n"
				+ "   	inner join #tempFromMainSaleProd as tfmsp on a.[SaleOrder] = tfmsp.[SaleOrder] and\r\n"
				+ "		                                             a.[SaleLine] = tfmsp.[SaleLine]\r\n"
				+ "		LEFT JOIN (\r\n"
				+ "			SELECT  [ProductionOrder] ,[ProductionOrderSW] \r\n"
				+ "			FROM [PCMS].[dbo].[SwitchProdOrder] AS A\r\n"
				+ "			WHERE ProductionOrder <> ProductionOrderSW AND DataStatus = 'O'	\r\n"
				+ " 	) AS B ON A.[ProductionOrder] = B.ProductionOrder \r\n"
				+ "		LEFT JOIN (\r\n"
				+ "			SELECT  [ProductionOrder] ,[ProductionOrderSW] \r\n"
				+ "			FROM [PCMS].[dbo].[SwitchProdOrder] AS A	\r\n"
				+ "			WHERE ProductionOrder <> ProductionOrderSW AND DataStatus = 'O'	\r\n"
				+ "		) AS C ON A.[ProductionOrder] = C.[ProductionOrderSW] \r\n"
				+ "		WHERE 	(B.ProductionOrder IS NOT NULL OR  C.ProductionOrder IS NOT NULL) and  \r\n"
				+ "				a.DataStatus <> 'X' and \r\n"
				+ "				a.SaleLine <> ''\r\n"
				+ "	) AS A \r\n"
				+ "  INNER join  #tempFromMainSaleProd as c on a.ProductionOrder = c.ProductionOrder \r\n"
				+ "  where  ( c.UserStatus <> 'ยกเลิก' ) \r\n"
				+ whereRP
				+ "UNION ALL\r\n"
				+ "SELECT  DISTINCT a.[Division]\r\n"
				+ "	  ,a.[SaleOrder]\r\n"
				+ "	  ,a.[SaleLine]\r\n"
				+ "	  ,a.[CustomerShortName]\r\n"
				+ "	  ,a.[PurchaseOrder]\r\n"
				+ "	  ,a.[MaterialNo]\r\n"
				+ "	  ,a.[CustomerMaterial]\r\n"
				+ "	  ,a.[DueDate] \r\n"
				+ "	  ,a.PODate\r\n"
				+ "	  ,a.GreigeUpdate \r\n"
				+ "	  ,a.CFMUpdate \r\n"
				+ "	  ,a.[SaleCreateDate] \r\n"
				+ "	  ,a.SOASFacApproved \r\n"
				+ "	  ,a.[OrderSheetPrintDate]  \r\n"
				+ "	  ,c.[ProductionOrder]\r\n"
				+ "	  ,c.[LotNo]\r\n"
				+ "	  ,c.[PrdCreateDate]  \r\n"
				+ "	  ,c.[POPostingDateDefault] \r\n"
				+ "	  ,c.[GreigeInDate]  \r\n"
				+ "	  ,c.[BCDate] \r\n"
				+ "	  ,c.[Prepare] \r\n"
				+ "	  ,c.[Unwind]  \r\n"
				+ "	  ,c.[Relax]  \r\n"
				+ "	  ,c.[Preset] \r\n"
				+ "	  ,c.[InspectAfterPreset] \r\n"
				+ "	  ,c.[DyeActual] \r\n"
				+ "	  ,c.[Centifuge] \r\n"
				+ "	  ,c.[Scutcher] \r\n"
				+ "	  ,c.[Dryer] \r\n"
				+ "	  ,c.[LabFinish] \r\n"
				+ "	  ,c.[Slitting] \r\n"
				+ "	  ,c.[CFMNoMini]\r\n"
				+ "	  ,c.[CFMNumberMini]\r\n"
				+ "	  ,c.[CFMSendDateMini]\r\n"
				+ "	  ,c.[CFMAnswerDateMini]\r\n"
				+ "	  ,c.[CFMStatusMini]\r\n"
				+ "	  ,c.[CFMRemarkMini]\r\n"
				+ "	  ,c.[RollNoRemarkMini] \r\n"
				+ "	  ,c.[Finishing] \r\n"
				+ "	  ,c.[Inspectation] \r\n"
				+ "	  ,c.[Packing] \r\n"
				+ "	  ,c.UserStatus\r\n"
				+ "	  ,c.[IsWaitLot]\r\n"
				+ "	  ,a.DaysGreigeUpDate\r\n"
				+ "	  ,a.DaysCFMUpdate \r\n"
				+ "	  ,a.DaysSaleCreateDate\r\n"
				+ "	  ,a.DaysSOASFacApproved\r\n"
				+ "   ,a.DaysPrdCreateDate\r\n"
				+ "	  ,a.DaysOrderSheetDate   \r\n"
				+ "	  ,c.DaysPOPostingDateDefault  \r\n"
				+ "	  ,c.DaysGreigeInDate  \r\n"
				+ "	  ,c.DaysBCDate  \r\n"
				+ "	  ,c.DaysPrepare \r\n"
				+ "	  ,c.DaysUnwind \r\n"
				+ "	  ,c.DaysRelax  \r\n"
				+ "	  ,c.DaysPreset  \r\n"
				+ "	  ,c.DaysInspectAfterPreset  \r\n"
				+ "	  ,c.DaysDyeActual  \r\n"
				+ "	  ,c.DaysCentifuge  \r\n"
				+ "	  ,c.DaysScutcher  \r\n"
				+ "	  ,c.DaysDryer \r\n"
				+ "	  ,c.DaysLabFinish  \r\n"
				+ "	  ,c.DaysSlitting   \r\n"
				+ "	  ,c.DaysFinishing \r\n"
				+ "	  ,c.DaysInspectation \r\n"
				+ "	  ,c.DaysPacking\r\n"
				+ "   ,  'Switch' as TypePrd \r\n"
				+ "   ,c.DaysCFMAnswerDate\r\n"
				+ "	FROM (\r\n"
				+ " 	SELECT  \r\n"
				+ "			a.ProductionOrderSW as ProductionOrder\r\n"
				+ "			,tfmsp.[Division]\r\n"
				+ "			,tfmsp.[SaleOrder] \r\n"
				+ "			,tfmsp.[SaleLine]\r\n"
				+ "			,tfmsp.[CustomerShortName]\r\n"
				+ "			,tfmsp.[PurchaseOrder]\r\n"
				+ "			,tfmsp.[MaterialNo]\r\n"
				+ "			,tfmsp.[CustomerMaterial]\r\n"
				+ "			,tfmsp.[DueDate] \r\n"
				+ "			,tfmsp.PODate\r\n"
				+ "			,tfmsp.GreigeUpdate \r\n"
				+ "			,tfmsp.CFMUpdate \r\n"
				+ "			,tfmsp.[SaleCreateDate] \r\n"
				+ "			,tfmsp.SOASFacApproved \r\n"
				+ "			,tfmsp.[OrderSheetPrintDate]\r\n"
				+ "	 	 	,tfmsp.DaysGreigeUpDate\r\n"
				+ "	  		,tfmsp.DaysCFMUpdate \r\n"
				+ "	  		,tfmsp.DaysSaleCreateDate\r\n"
				+ "	  		,tfmsp.DaysSOASFacApproved\r\n"
				+ "	  		,tfmsp.DaysOrderSheetDate    \r\n"
				+ "         ,tfmsp.DaysPrdCreateDate\r\n"
				+ "   	FROM [PCMS].[dbo].[SwitchProdOrder] as a\r\n"
				+ "   	inner join #tempFromMainSaleProd as tfmsp on a.[SaleOrder] = tfmsp.[SaleOrder] and\r\n"
				+ "                                                  a.[SaleLine] = tfmsp.[SaleLine]\r\n"
				+ "		LEFT JOIN (\r\n"
				+ "			SELECT  [ProductionOrder] ,[ProductionOrderSW] \r\n"
				+ "			FROM [PCMS].[dbo].[SwitchProdOrder] AS A\r\n"
				+ "			WHERE ProductionOrder <> ProductionOrderSW AND \r\n"
				+ "               DataStatus = 'O'\r\n"
				+ "		) AS B ON A.[ProductionOrder] = B.ProductionOrder \r\n"
				+ "		LEFT JOIN (\r\n"
				+ "			SELECT  [ProductionOrder] ,[ProductionOrderSW] \r\n"
				+ "			FROM [PCMS].[dbo].[SwitchProdOrder] AS A	\r\n"
				+ "			WHERE ProductionOrder <> ProductionOrderSW AND DataStatus = 'O'\r\n"
				+ "		) AS C ON A.[ProductionOrder] = C.[ProductionOrderSW] \r\n"
				+ "		WHERE (B.ProductionOrder IS NOT NULL OR  C.ProductionOrder IS NOT NULL) and  \r\n"
				+ "				a.DataStatus = 'O' and \r\n"
				+ "				a.SaleLine <> ''\r\n"
				+ " ) AS A \r\n"
				+ "  INNER join  #tempFromMainSaleProd as c on a.ProductionOrder = c.ProductionOrder \r\n"
				+ "  where  ( c.UserStatus <> 'ยกเลิก' ) \r\n"
				+ whereRP
				+ "  union all\r\n"
				+ "  SELECT  DISTINCT a.[Division]\r\n"
				+ "	  ,a.[SaleOrder]\r\n"
				+ "	  ,a.[SaleLine]\r\n"
				+ "	  ,a.[CustomerShortName]\r\n"
				+ "	  ,a.[PurchaseOrder]\r\n"
				+ "	  ,a.[MaterialNo]\r\n"
				+ "	  ,a.[CustomerMaterial]\r\n"
				+ "	  ,a.[DueDate] \r\n"
				+ "	  ,a.PODate\r\n"
				+ "	  ,a.GreigeUpdate \r\n"
				+ "	  ,a.CFMUpdate \r\n"
				+ "	  ,a.[SaleCreateDate] \r\n"
				+ "	  ,a.SOASFacApproved \r\n"
				+ "	  ,a.[OrderSheetPrintDate]  \r\n"
				+ "	  ,a.[ProductionOrder]\r\n"
				+ "	  ,a.[LotNo]\r\n"
				+ "	  ,a.[PrdCreateDate]  \r\n"
				+ "	  ,a.[POPostingDateDefault] \r\n"
				+ "	  ,a.[GreigeInDate]  \r\n"
				+ "	  ,a.[BCDate] \r\n"
				+ "	  ,a.[Prepare] \r\n"
				+ "	  ,a.[Unwind]  \r\n"
				+ "	  ,a.[Relax]  \r\n"
				+ "	  ,a.[Preset] \r\n"
				+ "	  ,a.[InspectAfterPreset] \r\n"
				+ "	  ,a.[DyeActual] \r\n"
				+ "	  ,a.[Centifuge] \r\n"
				+ "	  ,a.[Scutcher] \r\n"
				+ "	  ,a.[Dryer] \r\n"
				+ "	  ,a.[LabFinish] \r\n"
				+ "	  ,a.[Slitting] \r\n"
				+ "   ,a.[CFMNoMini]\r\n"
				+ "   ,a.[CFMNumberMini]\r\n"
				+ "   ,a.[CFMSendDateMini]\r\n"
				+ "   ,a.[CFMAnswerDateMini]\r\n"
				+ "   ,a.[CFMStatusMini]\r\n"
				+ "   ,a.[CFMRemarkMini]\r\n"
				+ "   ,a.[RollNoRemarkMini] \r\n"
				+ "	  ,a.[Finishing] \r\n"
				+ "	  ,a.[Inspectation] \r\n"
				+ "	  ,a.[Packing] \r\n"
				+ "	  ,a.UserStatus\r\n"
				+ "	  ,A.[IsWaitLot]\r\n"
				+ "	  ,a.DaysGreigeUpDate\r\n"
				+ "	  ,a.DaysCFMUpdate \r\n"
				+ "	  ,a.DaysSaleCreateDate\r\n"
				+ "	  ,a.DaysSOASFacApproved\r\n"
				+ "   ,a.DaysPrdCreateDate\r\n"
				+ "	  ,a.DaysOrderSheetDate   \r\n"
				+ "	  ,a.DaysPOPostingDateDefault  \r\n"
				+ "	  ,a.DaysGreigeInDate  \r\n"
				+ "	  ,a.DaysBCDate  \r\n"
				+ "	  ,a.DaysPrepare \r\n"
				+ "	  ,a.DaysUnwind \r\n"
				+ "	  ,a.DaysRelax  \r\n"
				+ "	  ,a.DaysPreset  \r\n"
				+ "	  ,a.DaysInspectAfterPreset  \r\n"
				+ "	  ,a.DaysDyeActual  \r\n"
				+ "	  ,a.DaysCentifuge  \r\n"
				+ "	  ,a.DaysScutcher  \r\n"
				+ "	  ,a.DaysDryer \r\n"
				+ "	  ,a.DaysLabFinish  \r\n"
				+ "	  ,a.DaysSlitting   \r\n"
				+ "	  ,a.DaysFinishing \r\n"
				+ "	  ,a.DaysInspectation \r\n"
				+ "	  ,a.DaysPacking\r\n"
				+ "   ,cASE \r\n"
				+ "		WHEN [IsWaitLot] = 'Y' THEN 'WaitLot'\r\n"
				+ "		ELSE 'Main' \r\n"
				+ "		END as TypePrd \r\n"
				+ "   ,a.DaysCFMAnswerDate\r\n"
				+ "   FROM #tempFromMainSaleProd as a  \r\n"
				+ "   WHERE ( UserStatus IS NULL OR UserStatus <> 'ยกเลิก' ) and\r\n"
				+ "	 		NOT EXISTS ( select distinct ProductionOrderSW\r\n"
				+ "				   FROM [PCMS].[dbo].[SwitchProdOrder] AS BAA\r\n"
				+ "				   WHERE DataStatus = 'O' and BAA.ProductionOrderSW = a.ProductionOrder\r\n"
				+ "		     )   \r\n"
				+ whereMain
				+ " ) AS A\r\n"
				+ " ORDER BY SaleOrder, SaleLine ,TypePrd , ProductionOrder ,CFMNoMini\r\n";  
//		System.out.println(sql);
		List<Map<String, Object>> datas = this.database.queryList(sql);
		list = new ArrayList<>();
		for (Map<String, Object> map : datas) {
			list.add(this.bcModel._genKPIReportDetail(map));
		}
//		list = this.handlerDaysWorkDate(list);
		return list;
	}

//	private ArrayList<KPIReportDetail> handlerDaysWorkDate(ArrayList<KPIReportDetail> list)
//	{
//		// TODO Auto-generated method stub
//		return null;
//	}

	public String getMessage() {
		return this.message;
	}
}
