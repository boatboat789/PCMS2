package dao.implement;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import Test.utilities.SqlStatementHandler;
import dao.MonthlyCapWithDueDateReportDao;
import entities.InputDateRunningDetail;
import entities.MonthlyCapWithDueDateReportDetail;
import entities.PlanningReportDetail;
import entities.SummaryMonthlyCapReportDetail;
import model.BeanCreateModel;
import th.in.totemplate.core.sql.Database;

public class MonthlyCapWithDueDateReportDaoImpl implements MonthlyCapWithDueDateReportDao {
	private BeanCreateModel bcModel = new BeanCreateModel();
	private Database database;

	@SuppressWarnings("unused")
	private String conType;
	private String message;
	@SuppressWarnings("unused")
	private SqlStatementHandler sshUtl = new SqlStatementHandler();
	public DecimalFormat df3 = new DecimalFormat("###,###,###,##0.00");
	// ------------------------------------------------------------------------------------------------
	public SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy");
	public SimpleDateFormat hhmm = new SimpleDateFormat("HH:mm");
	public SimpleDateFormat sdf3 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

	private String declareAllGroup = ""
			+ "   IF OBJECT_ID('tempdb..#TempAllGroup') IS NOT NULL \r\n"
			+ "		DROP TABLE #TempAllGroup; \r\n"
			+ "	select \r\n"
			+ "       b.[GroupNo]\r\n"
			+ "      ,b.[SubGroup]\r\n"
			+ "      ,b.[MeterPerLot]\r\n"
			+ "      ,b.[LotPerDay]\r\n"
			+ "      ,b.[GroupPriority]\r\n"
			+ "      ,b.[DataStatus]\r\n"
			+ "      ,b.[ChangeBy]\r\n"
			+ "      ,b.[ChangeDate]\r\n"
			+ "      ,b.[GroupType]\r\n"
			+ "      ,[PriorityGroup]\r\n"
			+ "      ,[isMinGroup]\r\n"
			+ "      ,A.[Description] \r\n"
			+ "      , A.[ColorType]\r\n"
			+ "	into #TempAllGroup\r\n"
			+ "	FROM [PPMM].[dbo].[InputMainGroupDetail] as a\r\n"
			+ "	inner join [PPMM].[dbo].[InputSubGroupDeail] as b on a.[GroupNo] = b.[GroupNo] \r\n"
			+ "	where a.[DataStatus] = 'O' and \r\n"
			+ "       b.[DataStatus] = 'O'\r\n" 
	;

	private String declareTempTotalPO = "" 
			+ " IF OBJECT_ID('tempdb..#TempPOTotal') IS NOT NULL \r\n"
			+ "		DROP TABLE #TempPOTotal; \r\n"
			+ "	select *\r\n"
			+ "	into #TempPOTotal\r\n"
			+ "	from (\r\n"
			+ "     SELECT distinct  a.[DueDate] ,b.[ProdOrderQty]  \r\n"
			+ "		FROM [PPMM].[dbo].[PlanLotSORDetail] AS A\r\n"
			+ "		inner join [PPMM].[dbo].[SOR_TempProd] as b on a.TempProdId = b.id\r\n"
			+ "		where ( A.[DataStatus] = 'O' OR A.[DataStatus] IS NULL ) AND\r\n"
			+ "			  ( \r\n"
			+ "				 A.[DueDate] <= @LastThirdMonth\r\n"
			+ "			  )  \r\n"
			+ "		union \r\n"
			+ "		SELECT distinct b.[DueDate] ,B.[QuantityMR]  as [ProdOrderQty]\r\n"
			+ "		FROM  [PPMM].[dbo].[PlanLotPOAddDetail] as b \r\n"
			+ "		where\r\n"
			+ "			b.[DueDate] <= @LastThirdMonth AND\r\n"
			+ "			b.DataStatus = 'O'  \r\n"
			+ " ) as a ;";

	private String declareTotalDays = ""
			+ " declare @BeforeFirstTotalDays int  ; \r\n"
			+ " declare @FirstTotalDays int  ; \r\n"
			+ " declare @SecondTotalDays int  ; \r\n"
			+ " declare @ThirdTotalDays int  ; \r\n"
			+ " declare @FourthTotalDays int  ; \r\n"
			+ " declare @FifthTotalDays int  ; \r\n"
			+ " declare @SixthTotalDays int  ; \r\n"
			+ " SELECT @BeforeFirstTotalDays =  ISNULL(count(RowNum),0) \r\n"
			+ "	FROM #TempWorkDateRunning   as a\r\n"
			+ " where WorkDate < @BeginFirstMonth and \r\n"
			+ "       WorkDate >= @today \r\n"
			+ "   SELECT @FirstTotalDays =  ISNULL(count(RowNum),0) \r\n"
			+ "	FROM #TempWorkDateRunning   as a\r\n"
			+ "	where @BeginFirstMonth <= WorkDate and WorkDate <= @LastFirstMonth and WorkDate >= @today  \r\n"
			+ "	\r\n"
			+ "   SELECT @SecondTotalDays =  ISNULL(count(RowNum) ,0) \r\n"
			+ "	FROM #TempWorkDateRunning   as a\r\n"
			+ "	where @BeginSecondMonth <= WorkDate and WorkDate <= @LastSecondMonth and WorkDate >= @today  \r\n"
			+ "	\r\n"
			+ "   SELECT @ThirdTotalDays =  ISNULL(count(RowNum) ,0) \r\n"
			+ "	FROM #TempWorkDateRunning   as a\r\n"
			+ "	where @BeginThirdMonth <= WorkDate and WorkDate <= @LastThirdMonth and WorkDate >= @today  \r\n"
			+ "	\r\n"
			+ "   SELECT @FourthTotalDays =  ISNULL(count(RowNum) ,0) \r\n"
			+ "	FROM #TempWorkDateRunning   as a\r\n"
			+ "	where @BeginFourthMonth <= WorkDate and WorkDate <= @LastFourthMonth and WorkDate >= @today  \r\n"
			+ "	\r\n"
			+ "   SELECT @FifthTotalDays =  ISNULL(count(RowNum) ,0) \r\n"
			+ "	FROM #TempWorkDateRunning   as a\r\n"
			+ "	where @BeginFifthMonth <= WorkDate and WorkDate <= @LastFifthMonth and WorkDate >= @today  \r\n"
			+ "	\r\n"
			+ "   SELECT @SixthTotalDays =  ISNULL(count(RowNum) ,0) \r\n"
			+ "	FROM #TempWorkDateRunning   as a\r\n"
			+ "	where @BeginSixthMonth <= WorkDate and WorkDate <= @LastSixthMonth and WorkDate >= @today  \r\n";
	private String delcareMain = ""
			+ " \r\n"
			+ " declare @IndexDM int ; \r\n"
			+ " declare @IndexEX int  ; \r\n"
			+ " SELECT @IndexDM = [CFM]+[CFMAnswer]+[Delivery] FROM [PPMM].[dbo].[InputLeadTimeDetail] WHERE [DataStatus] = 'O' AND [ForReport] = 1 and [DistChannal] = 'DM'\r\n"
			+ " SELECT @IndexEX = [CFM]+[CFMAnswer]+[Delivery] FROM [PPMM].[dbo].[InputLeadTimeDetail] WHERE [DataStatus] = 'O' AND [ForReport] = 1  and [DistChannal] = 'EX'\r\n"
			+ ""
//			+ " declare @StockDateFirst varchar(2) = '26'; \r\n"
//			+ " declare @StockDateLast varchar(2) = '25' ; \r\n"
			+ " declare @StockDateFirst varchar(2) = CAST ( "
			+ "                                      ( SELECT [DayOfMonth] + 1 FROM [PPMM].[dbo].[StockDefaultDate] where [DataStatus] ='O' )"
			+ "                                       AS VARCHAR(2)"
			+ "                                      ); \r\n"
			+ " declare @StockDateLast varchar(2) = CAST ( "
			+ "										( SELECT [DayOfMonth] FROM [PPMM].[dbo].[StockDefaultDate] where [DataStatus] ='O' )"
			+ "										 AS VARCHAR(2)"
			+ "										) ; \r\n"
			+ " declare @CurrentFirstDateOfMonth date  = DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) ;  \r\n"
			+ " declare @FirstYear varchar(4)  = year( dateadd(YEAR,-1,@BeginDateFirst))   ;\r\n"
			+ " declare @LastYear varchar(4)  = year( dateadd(YEAR,1,@BeginDateFirst))  ; \r\n"
			+ "  declare @BeginDateZero date  = dateadd(month,-1,@BeginDateFirst) ; \r\n"
			+ " declare @BeginDateSecond date  = dateadd(month,1,@BeginDateFirst) ;\r\n"
			+ " declare @BeginDateThird date = dateadd(month,1,@BeginDateSecond) ;\r\n"
			+ " declare @BeginDateFourth date = dateadd(month,1,@BeginDateThird) ;\r\n"
			+ " declare @BeginDateFifth date = dateadd(month,1,@BeginDateFourth) ;\r\n"
			+ " declare @BeginDateSixth date = dateadd(month,1,@BeginDateFifth) ;\r\n"
			+ " declare @BeginDateSeven date = dateadd(month,1,@BeginDateSixth) ;\r\n"
			+ " declare @BeginFirstMonth date  = \r\n"
			+ "				datefromparts( \r\n"
			+ "			 			CAST( year(@BeginDateZero) as varchar(4)) \r\n"
			+ "			 		,RIGHT('00' + cast(month(@BeginDateZero) as varchar(2)),2) \r\n"
			+ "			 	 ,@StockDateFirst \r\n"
			+ "			 	 ) ; \r\n"
			+ " declare @LastFirstMonth date  = datefromparts(\r\n"
			+ "				CAST( year(@BeginDateFirst) as varchar(4)) \r\n"
			+ "				,RIGHT('00' + cast(month(@BeginDateFirst) as varchar(2)),2)\r\n"
			+ "				 ,@StockDateLast\r\n"
			+ "				 ); \r\n"
			+ " declare @BeginSecondMonth date  = \r\n"
			+ "				datefromparts( \r\n"
			+ "			 			CAST( year(@BeginDateFirst) as varchar(4)) \r\n"
			+ "			 		,RIGHT('00' + cast(month(@BeginDateFirst) as varchar(2)),2) \r\n"
			+ "			 	 ,@StockDateFirst \r\n"
			+ "			 	 ) ;  ;\r\n"
			+ " declare @LastSecondMonth date  = datefromparts(\r\n"
			+ "				CAST( year(@BeginDateSecond) as varchar(4)) \r\n"
			+ "				,RIGHT('00' + cast(month(@BeginDateSecond) as varchar(2)),2)\r\n"
			+ "				 ,@StockDateLast\r\n"
			+ "				 );   ; \r\n"
			+ " declare @BeginThirdMonth date  = \r\n"
			+ "				datefromparts( \r\n"
			+ "			 			CAST( year(@BeginDateSecond) as varchar(4)) \r\n"
			+ "			 		,RIGHT('00' + cast(month(@BeginDateSecond) as varchar(2)),2) \r\n"
			+ "			 	 ,@StockDateFirst \r\n"
			+ "			 	 ) ; ;\r\n"
			+ " declare @LastThirdMonth date  = datefromparts(\r\n"
			+ "				CAST( year(@BeginDateThird) as varchar(4)) \r\n"
			+ "				,RIGHT('00' + cast(month(@BeginDateThird) as varchar(2)),2)\r\n"
			+ "				 ,@StockDateLast\r\n"
			+ "				 );  ; \r\n"
			+ " declare @BeginFourthMonth date  = \r\n"
			+ "				datefromparts( \r\n"
			+ "			 			CAST( year(@BeginDateThird) as varchar(4)) \r\n"
			+ "			 		,RIGHT('00' + cast(month(@BeginDateThird) as varchar(2)),2) \r\n"
			+ "			 	 ,@StockDateFirst \r\n"
			+ "			 	 ) ;  ;\r\n"
			+ " declare @LastFourthMonth date  = datefromparts(\r\n"
			+ "				CAST( year(@BeginDateFourth) as varchar(4)) \r\n"
			+ "				,RIGHT('00' + cast(month(@BeginDateFourth) as varchar(2)),2)\r\n"
			+ "				 ,@StockDateLast\r\n"
			+ "				 );   ; \r\n"
			+ " declare @BeginFifthMonth date  = \r\n"
			+ "				datefromparts( \r\n"
			+ "			 			CAST( year(@BeginDateFourth) as varchar(4)) \r\n"
			+ "			 		,RIGHT('00' + cast(month(@BeginDateFourth) as varchar(2)),2) \r\n"
			+ "			 	 ,@StockDateFirst \r\n"
			+ "			 	 ) ; ;\r\n"
			+ " declare @LastFifthMonth date  = datefromparts(\r\n"
			+ "				CAST( year(@BeginDateFifth) as varchar(4)) \r\n"
			+ "				,RIGHT('00' + cast(month(@BeginDateFifth) as varchar(2)),2)\r\n"
			+ "				 ,@StockDateLast\r\n"
			+ "				 );  ;  \r\n"
			+ " declare @BeginSixthMonth date  = \r\n"
			+ "				datefromparts( \r\n"
			+ "			 			CAST( year(@BeginDateFifth) as varchar(4)) \r\n"
			+ "			 		,RIGHT('00' + cast(month(@BeginDateFifth) as varchar(2)),2) \r\n"
			+ "			 	 ,@StockDateFirst \r\n"
			+ "			 	 ) ; ;\r\n"
			+ " declare @LastSixthMonth date  = datefromparts(\r\n"
			+ "				CAST( year(@BeginDateSixth) as varchar(4)) \r\n"
			+ "				,RIGHT('00' + cast(month(@BeginDateSixth) as varchar(2)),2)\r\n"
			+ "				 ,@StockDateLast\r\n"
			+ "				 );  ;  \r\n"
			+ " declare @IndexAddDaysFirstMonth int = CASE WHEN DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateSecond) = 0 THEN 0 ELSE DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateSecond) - 1 END; \r\n"
			+ " declare @IndexAddDaysSecondMonth int = CASE WHEN DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateThird ) = 0 THEN 0 ELSE DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateThird) - 1 END; \r\n"
			+ " declare @IndexAddDaysThirdMonth int = CASE WHEN DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateFourth) = 0 THEN 0 ELSE DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateFourth) - 1 END;  \r\n"
			+ " declare @IndexAddDaysFourthMonth int = CASE WHEN DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateFifth) = 0 THEN 0 ELSE DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateFifth) - 1 END;\r\n"
			+ " declare @IndexAddDaysFifthMonth int = CASE WHEN DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateSixth) = 0 THEN 0 ELSE DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateSixth) - 1 END;\r\n"
			+ " declare @IndexAddDaysSixthMonth int = CASE WHEN DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateSeven) = 0 THEN 0 ELSE DATEDIFF(MONTH, @CurrentFirstDateOfMonth, @BeginDateSeven) - 1 END;\r\n"
			+ ""
			+ " declare @CheckSameDate date  = cast ( DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0  ) as DATE) ;  \r\n"
			+ " declare @ISFirstPast int = 0 ;  \r\n"
			+ " declare @ISSecondPast int = 0 ;  \r\n"
			+ " declare @ISThirdPast int = 0 ;  \r\n"
			+ " declare @ISFourthPast int = 0 ;  \r\n"
			+ " declare @ISFifthPast int = 0 ;  \r\n"
			+ " declare @ISSixthPast int = 0 ;  \r\n"
			+ "  \r\n"
			+ "  IF(@BeginFirstMonth <= @CheckSameDate  and @CheckSameDate  <= @LastFirstMonth)\r\n"
			+ "	\r\n"
			+ "	BEGIN\r\n"
			+ "		--SET @BeginFirstMonth = CAST(GETDATE() AS DATE);\r\n"
			+ " SET @ISFirstPast = 0;\r\n"
			+ "	END \r\n"
			+ "  ELSE IF (@CheckSameDate > @BeginFirstMonth  ) \r\n"
			+ "	BEGIN\r\n"
			+ "		SET @ISFirstPast = 1;\r\n"
			+ "	END\r\n"
			+ "   IF (@BeginSecondMonth <= @CheckSameDate  and @CheckSameDate  <= @LastSecondMonth) \r\n"
			+ "	BEGIN\r\n"
			+ "		--SET @BeginSecondMonth =CAST(GETDATE() AS DATE);\r\n"
			+ "		SET @ISSecondPast = 0;\r\n"
			+ "	END\r\n"
			+ "  ELSE IF (@CheckSameDate > @BeginSecondMonth  ) \r\n"
			+ "	BEGIN\r\n"
			+ "		SET @ISSecondPast = 1;\r\n"
			+ "	END\r\n"
			+ "  IF (@BeginThirdMonth <= @CheckSameDate  and @CheckSameDate  <= @LastThirdMonth) \r\n"
			+ "	BEGIN\r\n"
			+ "		--SET @BeginThirdMonth = CAST(GETDATE() AS DATE);\r\n"
			+ "		SET @ISThirdPast = 0;\r\n"
			+ "	END\r\n"
			+ "  ELSE IF (@CheckSameDate > @BeginThirdMonth  ) \r\n"
			+ "	BEGIN\r\n"
			+ "		SET @ISThirdPast = 1;\r\n"
			+ "	END\r\n"
			+ "\r\n"
			+ "	\r\n"
			+ "  IF (@BeginFourthMonth <= @CheckSameDate  and @CheckSameDate  <= @LastFourthMonth) \r\n"
			+ "	BEGIN\r\n"
			+ "		--SET @BeginFourthMonth = CAST(GETDATE() AS DATE);\r\n"
			+ "		SET @ISFourthPast = 0;\r\n"
			+ "	END\r\n"
			+ "  ELSE IF (@CheckSameDate > @BeginFourthMonth  ) \r\n"
			+ "	BEGIN\r\n"
			+ "		SET @ISFourthPast = 1;\r\n"
			+ "	END\r\n"
			+ "\r\n"
			+ "	\r\n"
			+ "  IF (@BeginFifthMonth <= @CheckSameDate  and @CheckSameDate  <= @LastFifthMonth) \r\n"
			+ "	BEGIN\r\n"
			+ "		--SET @BeginFifthMonth = CAST(GETDATE() AS DATE);\r\n"
			+ "		SET @ISFifthPast = 0;\r\n"
			+ "	END\r\n"
			+ "  ELSE IF (@CheckSameDate > @BeginFifthMonth  ) \r\n"
			+ "	BEGIN\r\n"
			+ "		SET @ISFifthPast = 1;\r\n"
			+ "	END \r\n"
			+ "	\r\n"
			+ "  IF (@BeginSixthMonth <= @CheckSameDate  and @CheckSameDate  <= @LastSixthMonth) \r\n"
			+ "	BEGIN\r\n"
			+ "		--SET @BeginSixthMonth = CAST(GETDATE() AS DATE);\r\n"
			+ "		SET @ISSixthPast = 0;\r\n"
			+ "	END\r\n"
			+ "  ELSE IF (@CheckSameDate > @BeginSixthMonth  ) \r\n"
			+ "	BEGIN\r\n"
			+ "		SET @ISSixthPast = 1;\r\n"
			+ "	END \r\n";
	private String declareTempWorkDateRunning = ""
			+ " IF OBJECT_ID('tempdb..#TempWorkDateRunning') IS NOT NULL \r\n"
			+ "	   DROP TABLE #TempWorkDateRunning; \r\n"
			+ "	SELECT \r\n"
			+ "	ROW_NUMBER() OVER( ORDER BY [Date] ASC) as RowNum\r\n"
			+ "	,[Date] as [WorkDate]	\r\n"
			+ "      ,[DateName]\r\n"
			+ "      ,[NormalWork]\r\n"
			+ "	into #TempWorkDateRunning\r\n"
			+ "  FROM [PPMM].[dbo].[InputDateRunning]\r\n" 
			+ "  where NormalWork = 'O' and [Date] >= CAST(GETDATE() AS DATE) \r\n"
			+ "  ORDER BY [DATE]; \r\n ";
	private String declareTempFCRemain = ""
			+ " IF OBJECT_ID('tempdb..#TempFCRemain') IS NOT NULL \r\n"
			+ "    DROP TABLE #TempFCRemain; \r\n"
			+ "	Select a.GroupNo,a.[SubGroup] ,a.ForecastDate,sum(TotalBLQty) as TotalBLQty ,sum(TotalNonBLQty) as TotalNonBLQty,sum(TotalBLQty+TotalNonBLQty) as TotalPlanSystemDateForecast\r\n"
			+ "	into #TempFCRemain\r\n"
			+ "	from (\r\n"
			+ "		SELECT 'G1' as [GroupNo],'1' as [SubGroup] ,a.ForecastDate,0.00 as TotalBLQty,CAST( CEILING(   RemainBLQty / 300) AS INT ) AS TotalNonBLQty\r\n"
			+ "			FROM #tempFCDate AS A  \r\n"
			+ "		UNION\r\n"
			+ "		SELECT 'G3' as [GroupNo],'1' as [SubGroup] ,a.ForecastDate ,CAST(CEILING(RemainNonBLQty / 300) AS INT )  AS TotalBLQty ,0.00 as TotalNonBLQty\r\n"
			+ "			FROM #tempFCDate AS A\r\n"
			+ "		) as a  \r\n"
			+ "	group by a.GroupNo,a.[SubGroup],a.[ForecastDate]\r\n ";
	private String decalreTempFCDate = ""
			+ " IF OBJECT_ID('tempdb..#tempFCDate') IS NOT NULL \r\n"
			+ "		DROP TABLE #tempFCDate; \r\n"
			+ "	select \r\n"
			+ "  a.[Id]\r\n"
			+ " ,a.[DocDate]\r\n"
			+ " ,a.[CustomerNo]\r\n"
			+ " ,a.[ForecastNo]\r\n"
			+ " ,a.[ForecastMY]\r\n"
			+ " ,a.[TotalForecastQty]\r\n"
			+ " ,a.[ForecastBLQty]\r\n"
			+ " ,a.[ForecastNonBLQty]\r\n"
			+ " ,a.[Unit]\r\n"
			+ " ,a.[RuleNo]\r\n"
			+ " ,a.[DataStatus]\r\n"
			+ " ,a.[LastCFMDate]\r\n"
			+ " ,a.[ChangeDate]\r\n"
			+ " ,a.[ChangeBy]\r\n"
			+ " ,a.[CreateBy]\r\n"
			+ " ,a.[CreatedDate] , case\r\n"
			+ "		when  b.[CustomerName] is not null and b.[CustomerName] <> '' then  b.[CustomerName]\r\n"
			+ "    	else a.[CustomerName]\r\n"
			+ "		end as [CustomerName]  \r\n"
			+ " ,convert(date ,right(a.ForecastMY,4) + left(a.ForecastMY,2) + '01') AS ForecastDate \r\n"
			+ " ,convert(date ,right(a.ForecastMY,4) + left(a.ForecastMY,2) + '01') AS ForSortDueAndCustDue \r\n"
			+ " ,CASE \r\n"
			+ "	    WHEN DistChannel = 'EX' \r\n"
			+ "		THEN DATEADD(\r\n"
			+ "			MONTH,-3,convert(\r\n"
			+ "				date ,right(a.ForecastMY,4) + \r\n"
			+ "				left(a.ForecastMY,2) + \r\n"
			+ "				CAST(\r\n"
			+ "					(SELECT TOP 1 [DayOfMonth]+1  FROM [PPMM].[dbo].[StockDefaultDate] WHERE DataStatus = 'O') AS VARCHAR(2))\r\n"
			+ "			)\r\n"
			+ "		)\r\n"
			+ "	ELSE \r\n"
			+ "		DATEADD(\r\n"
			+ "			MONTH,-2,convert(\r\n"
			+ "				date ,right(a.ForecastMY,4) + \r\n"
			+ "				left(a.ForecastMY,2) + \r\n"
			+ "				CAST(\r\n"
			+ "					(SELECT TOP 1 [DayOfMonth]+1  FROM [PPMM].[dbo].[StockDefaultDate] WHERE DataStatus = 'O') AS VARCHAR(2))\r\n"
			+ "			)\r\n"
			+ "		)\r\n"
			+ "	END AS ForecastDateMonthBefore \r\n"
			+ ",CASE \r\n"
			+ "		WHEN DistChannel = 'EX' \r\n"
			+ "		THEN DATEADD(\r\n"
			+ "			MONTH,-2,convert(\r\n"
			+ "				date ,right(a.ForecastMY,4) + \r\n"
			+ "				left(a.ForecastMY,2) + \r\n"
			+ "				CAST(\r\n"
			+ "					(SELECT TOP 1 [DayOfMonth]  FROM [PPMM].[dbo].[StockDefaultDate] WHERE DataStatus = 'O') AS VARCHAR(2))\r\n"
			+ "			)\r\n"
			+ "		)\r\n"
			+ "		ELSE \r\n"
			+ "			DATEADD(\r\n"
			+ "			MONTH,-1,convert(\r\n"
			+ "				date ,right(a.ForecastMY,4) + \r\n"
			+ "				left(a.ForecastMY,2) + \r\n"
			+ "				CAST(\r\n"
			+ "					(SELECT TOP 1 [DayOfMonth]  FROM [PPMM].[dbo].[StockDefaultDate] WHERE DataStatus = 'O') AS VARCHAR(2))\r\n"
			+ "			)\r\n"
			+ "		)\r\n"
			+ "	END AS ForecastDateMonthLast \r\n"
			+ " ,[RemainNonBLQty]\r\n"
			+ " ,[RemainBLQty]\r\n"
			+ " into #tempFCDate \r\n"
			+ " from [PPMM].[dbo].[SOR_ForecastDetail] AS A \r\n"
			+ " INNER JOIN (\r\n"
			+ "	 	SELECT SUBSTRING([CustomerNo], PATINDEX('%[^0]%', [CustomerNo]+'.'), LEN([CustomerNo]))   as [CustomerNo]\r\n"
			+ "	 	 ,[CustomerShortName] as [CustomerName]\r\n"
			+ "		 ,[ChangeDate]\r\n"
			+ "		 ,[CreateDate]\r\n"
			+ "      , DistChannel\r\n"
			+ "      , case\r\n"
			+ "          when [CustomerName] not like '%SABINA%' and [CustomerShortName] not like '%SBF%'\r\n"
			+ "          then 0 \r\n"
			+ "			 else 1 \r\n"
			+ "        end as isSabina\r\n"
			+ "	 FROM [PCMS].[dbo].[CustomerDetail] \r\n"
			+ " ) AS B ON A.CustomerNo = b.CustomerNo\r\n"
			+ " where DataStatus = 'O' and \r\n"
			+ "	      convert(date ,right(a.ForecastMY,4) + left(a.ForecastMY,2) + '01') >= @CurrentFirstDateOfMonth\r\n";

	private String decalreTempPOMainNPOInstead = ""
			+ " IF OBJECT_ID('tempdb..#tempPOMainNPOInstead') IS NOT NULL \r\n"
			+ "		DROP TABLE #tempPOMainNPOInstead; \r\n" 
			+ "	SELECT a.*,b.[DueDate]\r\n"
			+ " INTO #tempPOMainNPOInstead\r\n"
			+ "	FROM (\r\n"
			+ " 	select\r\n"
			+ " 		a.[Id]\r\n"
			+ "			, A.POId \r\n"
			+ " 		,a.[ForecastId] ,a.[PlanInsteadId] ,a.[RuleNo] ,a.[ColorType]\r\n"
			+ " 		,a.[ProductionOrder] ,a.[FirstLot] ,a.[ProdOrderQty] ,a.[GroupOptions]\r\n"
			+ " 		,a.[GroupBegin] ,a.[PPMMStatus] ,a.[DataStatus] ,a.[ChangeDate]\r\n"
			+ " 		,a.[ChangeBy] ,a.[CreateDate] ,a.[CreateBy] ,a.[Batch]\r\n"
			+ " 		,left(a.[GroupBegin], charindex(':', a.[GroupBegin]) - 1) AS GroupNo\r\n"
			+ " 		,SUBSTRING(a.[GroupBegin], charindex(':', a.[GroupBegin])+1 ,LEN(a.[GroupBegin])) as SubGroup  \r\n"
			+ " 	from [PPMM].[dbo].[SOR_TempProd] as a\r\n"
			+ " 	LEFT JOIN (\r\n"
			+ "			SELECT DISTINCT ProductionOrder , OperationEndDate ,UserStatus\r\n"
			+ "   		FROM [PPMM].[dbo].[DataFromSap] AS a \r\n"
			+ "     	WHERE (AdminStatus <> 'ForceClosed' AND Operation = '100') \r\n"
			+ "  	) AS dfs100 ON a.ProductionOrder = dfs100.ProductionOrder \r\n" 
//			U043	รอขาย
//			U046	ขายแล้ว
//			U048	ตัดเกรดZ
//			U049	ยกเลิก
//			U050	OVER
//			U051	HOLD,รอโอน
//			U056	ปิดเพื่อแก้ไข
//			U068	ขายเหลือ 
			+ " 	LEFT JOIN (\r\n"
			+ "			SELECT  [Id]\r\n"
			+ "      	,[UserStatusSapId]\r\n"
			+ "      	,[UserStatus] \r\n"
			+ "      	,[DyeFocus]\r\n"
			+ "  		FROM [PPMM].[dbo].[viewUserStatusCondition]\r\n"
			+ "  		WHERE [DyeFocus] = 'X'\r\n" 
			+ "  	) AS viewUSD ON dfs100.UserStatus = viewUSD.UserStatus\r\n"
//			+ " 	LEFT JOIN (\r\n"
//			+ "			SELECT USD.[Id] ,USD.[UserStatusSapId] ,USD.[UserStatus] \r\n"
//			+ "  		FROM [PPMM].[dbo].[UserStatusDetail] AS USD \r\n"
//			+ "	  		WHERE USD.[UserStatusSapId] = 'U043'or USD.[UserStatusSapId] = 'U046' or USD.[UserStatusSapId] = 'U048' or USD.[UserStatusSapId] = 'U049'or  \r\n"
//			+ "			 	  USD.[UserStatusSapId] = 'U050'or USD.[UserStatusSapId]= 'U051' or USD.[UserStatusSapId] = 'U056'  or  \r\n"
//			+ "			  	  USD.[Use	rStatusSapId] = 'U068' \r\n"
//			+ "  	) AS USD ON dfs100.UserStatus = USD.UserStatus\r\n"
			+ "		where ( a.POId is not null  ) and \r\n"
			+ "		   		a.DataStatus = 'O' AND \r\n"
			+ "	       	    viewUSD.UserStatus is null and\r\n"
			+ "	       		( ( OperationEndDate is null and dfs100.ProductionOrder is not null ) or dfs100.ProductionOrder is null )\r\n"
			+ "	) AS A\r\n"
			+ "	INNER JOIN [PPMM].[dbo].[PlanLotSORDetail] AS B ON A.[POId] = b.[POId]\r\n" 
			+ "  ";
	private String decalreTempMainData = ""
			+ "	IF OBJECT_ID('tempdb..#TempMainData') IS NOT NULL \r\n"
			+ "		DROP TABLE #TempMainData; \r\n"
			+ "	SELECT * \r\n"
			+ "	--, A.FirstTotalLotWorkDate - FirstTotolLotPlanDate as FirstRemainCapacityLot\r\n"
			+ "	--, ( A.FirstTotalLotWorkDate - FirstTotolLotPlanDate ) * MeterPerLot	 as FirstRemainCapacityMeter\r\n"
			+ "	,CASE \r\n"
			+ "		WHEN LotPerDay > 0 THEN CEILING(   FirstTotolLotPlanDate  * 1.0 /LotPerDay )\r\n"
			+ "		ELSE 0\r\n"
			+ "		END as FirstIndexDyeDate \r\n"
			+ "\r\n"
			+ "	--, A.SecondTotalLotWorkDate - SecondTotolLotPlanDate as SecondRemainCapacityLot\r\n"
			+ "	--, ( A.SecondTotalLotWorkDate - SecondTotolLotPlanDate) * MeterPerLot	 as SecondRemainCapacityMeter\r\n"
			+ "	, CASE \r\n"
			+ "		WHEN LotPerDay > 0 THEN CEILING( SecondTotolLotPlanDate  * 1.0 /LotPerDay )\r\n"
			+ "		ELSE 0\r\n"
			+ "		END as SecondIndexDyeDate \r\n"
			+ "\r\n"
			+ "	--, A.ThirdTotalLotWorkDate - ThirdTotolLotPlanDate as ThirdRemainCapacityLot\r\n"
			+ "	--, ( A.ThirdTotalLotWorkDate - ThirdTotolLotPlanDate) * MeterPerLot	 as ThirdRemainCapacityMeter\r\n"
			+ "	, CASE \r\n"
			+ "		WHEN LotPerDay > 0 THEN CEILING( ThirdTotolLotPlanDate  * 1.0 /LotPerDay )\r\n"
			+ "		ELSE 0\r\n"
			+ "		END as ThirdIndexDyeDate\r\n"
			+ "		\r\n"
			+ "	, CASE \r\n"
			+ "		WHEN LotPerDay > 0 THEN CEILING( FourthTotolLotPlanDate  * 1.0 /LotPerDay )\r\n"
			+ "		ELSE 0\r\n"
			+ "		END as FourthIndexDyeDate \r\n"
			+ "	, CASE \r\n"
			+ "		WHEN LotPerDay > 0 THEN CEILING( FifthTotolLotPlanDate  * 1.0 /LotPerDay )\r\n"
			+ "		ELSE 0\r\n"
			+ "		END as FifthIndexDyeDate \r\n"
			+ "	, CASE \r\n"
			+ "		WHEN LotPerDay > 0 THEN CEILING( SixthTotolLotPlanDate  * 1.0 /LotPerDay )\r\n"
			+ "		ELSE 0\r\n"
			+ "		END as SixthIndexDyeDate  \r\n"
			+ "\r\n"
			+ "	--, A.FourthTotalLotWorkDate - FourthTotolLotPlanDate as FourthRemainCapacityLot\r\n"
			+ "	--, ( A.FourthTotalLotWorkDate - FourthTotolLotPlanDate) * MeterPerLot	 as FourthRemainCapacityMeter\r\n"
			+ "\r\n"
			+ "	--, A.FifthTotalLotWorkDate - FifthTotolLotPlanDate as FifthRemainCapacityLot\r\n"
			+ "	--, ( A.FifthTotalLotWorkDate - FifthTotolLotPlanDate) * MeterPerLot	 as FifthRemainCapacityMeter\r\n"
			+ "\r\n"
			+ "	--, A.SixthTotalLotWorkDate - SixthTotolLotPlanDate as SixthRemainCapacityLot\r\n"
			+ "	--, ( A.SixthTotalLotWorkDate - SixthTotolLotPlanDate) * MeterPerLot	 as SixthRemainCapacityMeter\r\n"
			+ " into #TempMainData\r\n"
			+ " FROM (\r\n"
			+ " SELECT DISTINCT \r\n"
			+ "   A.[GroupNo]	\r\n"
			+ "  ,A.[SubGroup]\r\n"
			+ "  ,A.[Description]\r\n"
			+ "  ,A.[LotPerDay]\r\n"
			+ "  ,A.[ColorType]\r\n"
			+ "  ,A.[GroupType] \r\n"
			+ "  ,A.MeterPerLot\r\n"
			+ "	 ,@FirstTotalDays as FirstTotalWorkDate \r\n"
			+ "	 --,CASE		\r\n"
			+ "		--	WHEN @ISFirstPast = 1 THEN 0\r\n"
			+ "		--	ELSE @FirstTotalDays * A.LotPerDay \r\n"
			+ "		--	END as FirstTotalLotWorkDate\r\n"
			+ "	 ,isnull(FIRSTD.TotalPlanSystemDatePO,0) as FirstTotalPlanSystemDatePO\r\n"
			+ "	 ,isnull(FIRSTE.TotalPlanSystemDateRedye,0) as FirstTotalPlanSystemDateRedye\r\n"
			+ "	 ,isnull(FIRSTF.TotalPlanSystemDateForecast,0) as FirstTotalPlanSystemDateForecast\r\n"
			+ "	, isnull(FirstD.TotalPlanSystemDatePO,0) + isnull(FirstE.TotalPlanSystemDateRedye,0) + isnull(FirstF.TotalPlanSystemDateForecast,0) as FirstTotolLotPlanDate\r\n"
			+ "	 ,@SecondTotalDays as SecondTotalWorkDate \r\n"
			+ "	 --,CASE		\r\n"
			+ "		--	WHEN @ISSecondPast = 1 THEN 0\r\n"
			+ "		--	ELSE @SecondTotalDays * A.LotPerDay \r\n"
			+ "		--	END as SecondTotalLotWorkDate\r\n"
			+ "	 ,isnull(SecondD.TotalPlanSystemDatePO,0) as SecondTotalPlanSystemDatePO\r\n"
			+ "	 ,isnull(SecondE.TotalPlanSystemDateRedye,0) as SecondTotalPlanSystemDateRedye\r\n"
			+ "	 ,isnull(SecondF.TotalPlanSystemDateForecast,0) as SecondTotalPlanSystemDateForecast\r\n"
			+ "	, isnull(SecondD.TotalPlanSystemDatePO,0) + isnull(SecondE.TotalPlanSystemDateRedye,0) + isnull(SecondF.TotalPlanSystemDateForecast,0) as SecondTotolLotPlanDate\r\n"
			+ "	 \r\n"
			+ "	 ,@ThirdTotalDays as ThirdTotalWorkDate \r\n"
			+ "	 --,CASE		\r\n"
			+ "		--	WHEN @ISThirdPast = 1 THEN 0\r\n"
			+ "		--	ELSE @ThirdTotalDays  * A.LotPerDay \r\n"
			+ "		--	END as ThirdTotalLotWorkDate\r\n"
			+ "	 ,isnull(ThirdD.TotalPlanSystemDatePO,0) as ThirdTotalPlanSystemDatePO\r\n"
			+ "	 ,isnull(ThirdE.TotalPlanSystemDateRedye,0) as ThirdTotalPlanSystemDateRedye\r\n"
			+ "	 ,isnull(ThirdF.TotalPlanSystemDateForecast,0) as ThirdTotalPlanSystemDateForecast\r\n"
			+ "	, isnull(ThirdD.TotalPlanSystemDatePO,0) + isnull(ThirdE.TotalPlanSystemDateRedye,0) + isnull(ThirdF.TotalPlanSystemDateForecast,0) as ThirdTotolLotPlanDate\r\n"
			+ "\r\n"
			+ "	 \r\n"
			+ "	 ,@FourthTotalDays as FourthTotalWorkDate \r\n"
			+ "	 --,CASE		\r\n"
			+ "		--	WHEN @ISFourthPast = 1 THEN 0\r\n"
			+ "		--	ELSE @FourthTotalDays * A.LotPerDay \r\n"
			+ "		--	END as FourthTotalLotWorkDate\r\n"
			+ "	 ,isnull(FourthD.TotalPlanSystemDatePO,0) as FourthTotalPlanSystemDatePO\r\n"
			+ "	 ,isnull(FourthE.TotalPlanSystemDateRedye,0) as FourthTotalPlanSystemDateRedye\r\n"
			+ "	 ,isnull(FourthF.TotalPlanSystemDateForecast,0) as FourthTotalPlanSystemDateForecast\r\n"
			+ "	, isnull(FourthD.TotalPlanSystemDatePO,0) + isnull(FourthE.TotalPlanSystemDateRedye,0) + isnull(FourthF.TotalPlanSystemDateForecast,0) as FourthTotolLotPlanDate\r\n"
			+ "\r\n"
			+ "	 \r\n"
			+ "	 ,@FifthTotalDays as FifthTotalWorkDate \r\n"
			+ "	 ,CASE		\r\n"
			+ "			WHEN @ISFifthPast = 1 THEN 0\r\n"
			+ "			ELSE @FifthTotalDays * A.LotPerDay \r\n"
			+ "			END as FifthTotalLotWorkDate\r\n"
			+ "	 ,isnull(FifthD.TotalPlanSystemDatePO,0) as FifthTotalPlanSystemDatePO\r\n"
			+ "	 ,isnull(FifthE.TotalPlanSystemDateRedye,0) as FifthTotalPlanSystemDateRedye\r\n"
			+ "	 ,isnull(FifthF.TotalPlanSystemDateForecast,0) as FifthTotalPlanSystemDateForecast\r\n"
			+ "	, isnull(FifthD.TotalPlanSystemDatePO,0) + isnull(FifthE.TotalPlanSystemDateRedye,0) + isnull(FifthF.TotalPlanSystemDateForecast,0) as FifthTotolLotPlanDate\r\n"
			+ "	 ,@SixthTotalDays as SixthTotalWorkDate \r\n"
			+ "	 \r\n"
			+ "	 --,CASE		\r\n"
			+ "		--	WHEN @ISSixthPast = 1 THEN 0\r\n"
			+ "		--	ELSE @SixthTotalDays * A.LotPerDay \r\n"
			+ "		--	END as SixthTotalLotWorkDate\r\n"
			+ "	 ,isnull(SixthD.TotalPlanSystemDatePO,0) as SixthTotalPlanSystemDatePO\r\n"
			+ "	 ,isnull(SixthE.TotalPlanSystemDateRedye,0) as SixthTotalPlanSystemDateRedye\r\n"
			+ "	 ,isnull(SixthF.TotalPlanSystemDateForecast,0) as SixthTotalPlanSystemDateForecast\r\n"
			+ "	, isnull(SixthD.TotalPlanSystemDatePO,0) + isnull(SixthE.TotalPlanSystemDateRedye,0) + isnull(SixthF.TotalPlanSystemDateForecast,0) as SixthTotolLotPlanDate\r\n"
			+ "	 ,BeforeIndexDyeDate   \r\n"
			+ "	 FROM #TempAllGroup as A \r\n"
			+ " left join (  \r\n"
			+ "		select ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup] ,sum(TotalPlanSystemDatePO) AS TotalPlanSystemDatePO\r\n"
			+ "		FROM (\r\n"
			+ "			SELECT distinct a.[GroupNo] , a.[SubGroup] , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  	FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "				LEFT join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "				LEFT JOIN [PPMM].[dbo].[PlanLotPOAddDetail] AS C ON A.TempPOAddId = C.ID\r\n"
			+ "			  	WHERE A.DataStatus = 'O' and \r\n"
			+ "					  a.[GroupNo] is not null and \r\n"
			+ "				(\r\n"
			+ "					(  \r\n"
			+ "					  b.[DueDate] <= @LastFirstMonth  \r\n"
			+ "					  ) OR\r\n"
			+ "					(  \r\n"
			+ "					  C.[DueDate] <= @LastFirstMonth  ) \r\n"
			+ "				) AND \r\n"
			+ "					   ( b.POId IS NOT NULL or C.DataStatus = 'O')\r\n"
			+ "			  group by a.GroupNo ,a.SubGroup \r\n"
			+ "			  UNION \r\n"
			+ "				SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "						inner join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "						where a.[PlanSystemDate] is null AND (  \r\n"
			+ "								  b.[DueDate] <= @LastFirstMonth  \r\n"
			+ "								  ) \r\n"
			+ "						group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "				union \r\n"
			+ "				SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "						inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
			+ "						where a.[PlanSystemDate] is null AND B.[DataStatus] = 'O'\r\n"
			+ "							AND (   \r\n"
			+ "								  b.[DueDate] <= @LastFirstMonth  \r\n"
			+ "								  ) \r\n"
			+ "						group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "			)AS A\r\n"
			+ "			GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ "	) as FIRSTd on a.[GroupNo] = FIRSTd.[GroupNo]  AND A.[SubGroup] = FIRSTD.[SubGroup]\r\n"
			+ " left join ( \r\n"
			+ "	SELECT  ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup] ,SUM( TotalPlanSystemDateRedye ) AS TotalPlanSystemDateRedye \r\n"
			+ "	FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is not null and \r\n"
			+ "				b.[DueDate] <= @LastFirstMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O'\r\n"
			+ "		group by a.GroupNo ,a.SubGroup \r\n"
			+ "		UNION\r\n"
			+ "		SELECT distinct b.GroupNo ,b.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is null and  \r\n"
			+ "				b.[DueDate] <= @LastFirstMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O' AND\r\n"
			+ "				a.[PlanSystemDate] is null \r\n"
			+ "		group by b.GroupNo ,b.SubGroup \r\n"
			+ "	) AS A\r\n"
			+ "	GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ "	) as FIRSTE on a.[GroupNo] = FIRSTE.[GroupNo]  AND A.[SubGroup] = FIRSTE.[SubGroup]\r\n"
			+ " \r\n"
			+ " left join (\r\n"
			+ "		SELECT a.[GroupNo],a.[SubGroup] ,CAST( CEILING(   TotalPlanSystemDateForecast / 300) AS INT ) AS TotalPlanSystemDateForecast\r\n"
			+ "		FROM #TempFCRemain AS A \r\n"
			+ "		WHERE \r\n"
			+ "			a.[ForecastDate] >= @BeginFirstMonth and \r\n"
			+ "			a.[ForecastDate] <= @LastFirstMonth \r\n"
			+ "	) as FIRSTf on a.[GroupNo] = FIRSTf.[GroupNo]  AND A.[SubGroup] = FIRSTf.[SubGroup]\r\n"
			+ " left join (\r\n"
			+ "		select ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup] ,sum(TotalPlanSystemDatePO) AS TotalPlanSystemDatePO\r\n"
			+ "		FROM (\r\n"
			+ "			SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  	FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "				LEFT join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "				LEFT JOIN [PPMM].[dbo].[PlanLotPOAddDetail] AS C ON A.TempPOAddId = C.ID\r\n"
			+ "			  	WHERE A.DataStatus = 'O' and \r\n"
			+ "					  a.[GroupNo] is not null and \r\n"
			+ "				(\r\n"
			+ "					( \r\n"
			+ "					  b.[DueDate] >= @BeginSecondMonth  and \r\n"
			+ "					  b.[DueDate] <= @LastSecondMonth  \r\n"
			+ "					  ) OR\r\n"
			+ "					( \r\n"
			+ "					  C.[DueDate] >= @BeginSecondMonth  and \r\n"
			+ "					  C.[DueDate] <= @LastSecondMonth  ) \r\n"
			+ "				) AND \r\n"
			+ "					   ( b.POId IS NOT NULL or C.DataStatus = 'O')\r\n"
			+ "			  group by a.GroupNo ,a.SubGroup \r\n"
			+ "			  UNION \r\n"
			+ "				SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "						inner join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "						where a.[PlanSystemDate] is null AND ( \r\n"
			+ "								  b.[DueDate] >= @BeginSecondMonth  and \r\n"
			+ "								  b.[DueDate] <= @LastSecondMonth  \r\n"
			+ "								  ) \r\n"
			+ "						group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "				union \r\n"
			+ "				SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "						inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
			+ "						where a.[PlanSystemDate] is null AND B.[DataStatus] = 'O'\r\n"
			+ "							AND ( \r\n"
			+ "								  b.[DueDate] >= @BeginSecondMonth  and \r\n"
			+ "								  b.[DueDate] <= @LastSecondMonth  \r\n"
			+ "								  ) \r\n"
			+ "						group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "			)AS A\r\n"
			+ "			GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ "	) as Secondd on a.[GroupNo] = Secondd.[GroupNo]  AND \r\n"
			+ "                 A.[SubGroup] = SecondD.[SubGroup]\r\n"
			+ " left join (  \r\n"
			+ "	SELECT   ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup] ,SUM( TotalPlanSystemDateRedye ) AS TotalPlanSystemDateRedye \r\n"
			+ "	FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is not null and\r\n"
			+ "				b.[DueDate] >= @BeginSecondMonth  and \r\n"
			+ "				b.[DueDate] <= @LastSecondMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O'\r\n"
			+ "		group by a.GroupNo ,a.SubGroup \r\n"
			+ "		UNION\r\n"
			+ "		SELECT distinct b.GroupNo ,b.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and\r\n"
			+ "				a.[GroupNo] is null and \r\n"
			+ "				b.[DueDate] >= @BeginSecondMonth  and \r\n"
			+ "				b.[DueDate] <= @LastSecondMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O' AND\r\n"
			+ "				a.[PlanSystemDate] is null \r\n"
			+ "		group by b.GroupNo ,b.SubGroup \r\n"
			+ "	) AS A\r\n"
			+ "	GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ " ) as SecondE on a.[GroupNo] = SecondE.[GroupNo]  AND A.[SubGroup] = SecondE.[SubGroup]\r\n"
			+ " \r\n"
			+ " left join ( \r\n"
			+ "		SELECT a.[GroupNo],a.[SubGroup] ,CAST( CEILING(   TotalPlanSystemDateForecast / 300) AS INT ) AS TotalPlanSystemDateForecast\r\n"
			+ "		FROM #TempFCRemain AS A \r\n"
			+ "		WHERE \r\n"
			+ "			a.[ForecastDate] >= @BeginSecondMonth and \r\n"
			+ "			a.[ForecastDate] <= @LastSecondMonth \r\n"
			+ "	) as Secondf on a.[GroupNo] = Secondf.[GroupNo]  AND A.[SubGroup] = Secondf.[SubGroup]\r\n"
			+ " left join (\r\n"
			+ " 	select  ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup] ,sum(TotalPlanSystemDatePO) AS TotalPlanSystemDatePO\r\n"
			+ "		FROM (\r\n"
			+ "			SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  	FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "				LEFT join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "				LEFT JOIN [PPMM].[dbo].[PlanLotPOAddDetail] AS C ON A.TempPOAddId = C.ID\r\n"
			+ "			  	WHERE A.DataStatus = 'O' and \r\n"
			+ "					  a.[GroupNo] is not null and \r\n"
			+ "				(\r\n"
			+ "					( \r\n"
			+ "					  b.[DueDate] >= @BeginThirdMonth  and \r\n"
			+ "					  b.[DueDate] <= @LastThirdMonth  \r\n"
			+ "					  ) OR\r\n"
			+ "					( \r\n"
			+ "					  C.[DueDate] >= @BeginThirdMonth  and \r\n"
			+ "					  C.[DueDate] <= @LastThirdMonth  ) \r\n"
			+ "				) AND \r\n"
			+ "					   ( b.POId IS NOT NULL or C.DataStatus = 'O')\r\n"
			+ "			  group by a.GroupNo ,a.SubGroup \r\n"
			+ "			  UNION \r\n"
			+ "				SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "						inner join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "						where a.[PlanSystemDate] is null AND ( \r\n"
			+ "								  b.[DueDate] >= @BeginThirdMonth  and \r\n"
			+ "								  b.[DueDate] <= @LastThirdMonth  \r\n"
			+ "								  ) \r\n"
			+ "						group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "				union \r\n"
			+ "				SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "						inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
			+ "						where a.[PlanSystemDate] is null AND B.[DataStatus] = 'O'\r\n"
			+ "							AND ( \r\n"
			+ "								  b.[DueDate] >= @BeginThirdMonth  and \r\n"
			+ "								  b.[DueDate] <= @LastThirdMonth  \r\n"
			+ "								  ) \r\n"
			+ "						group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "			)AS A\r\n"
			+ "			GROUP BY a.[GroupNo] ,a.[SubGroup] \r\n"
			+ "	) as Thirdd on a.[GroupNo] = Thirdd.[GroupNo]  AND A.[SubGroup] = ThirdD.[SubGroup]\r\n"
			+ " left join ( \r\n"
			+ "	\r\n"
			+ "	SELECT   ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup] ,SUM( TotalPlanSystemDateRedye ) AS TotalPlanSystemDateRedye \r\n"
			+ "	FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is not null and\r\n"
			+ "				b.[DueDate] >= @BeginThirdMonth  and \r\n"
			+ "				b.[DueDate] <= @LastThirdMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O'\r\n"
			+ "		group by a.GroupNo ,a.SubGroup \r\n"
			+ "		UNION\r\n"
			+ "		SELECT distinct b.GroupNo ,b.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is null and  \r\n"
			+ "				b.[DueDate] >= @BeginThirdMonth  and \r\n"
			+ "				b.[DueDate] <= @LastThirdMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O' AND\r\n"
			+ "				a.[PlanSystemDate] is null \r\n"
			+ "		group by b.GroupNo ,b.SubGroup \r\n"
			+ "	) AS A\r\n"
			+ "	GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ "	) as ThirdE on a.[GroupNo] = ThirdE.[GroupNo]  AND A.[SubGroup] = ThirdE.[SubGroup]\r\n"
			+ " \r\n"
			+ " left join (\r\n"
			+ "		SELECT a.[GroupNo],a.[SubGroup] ,CAST( CEILING(   TotalPlanSystemDateForecast / 300) AS INT ) AS TotalPlanSystemDateForecast\r\n"
			+ "		FROM #TempFCRemain AS A \r\n"
			+ "		WHERE \r\n"
			+ "			a.[ForecastDate] >= @BeginThirdMonth and \r\n"
			+ "			a.[ForecastDate] <= @LastThirdMonth \r\n"
			+ "	) as Thirdf on a.[GroupNo] = Thirdf.[GroupNo]  AND A.[SubGroup] = Thirdf.[SubGroup]  \r\n"
			+ " left join   ( \r\n"
			+ "	select  ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup],sum(TotalPlanSystemDatePO) AS TotalPlanSystemDatePO\r\n"
			+ "	FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "			LEFT join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "			LEFT JOIN [PPMM].[dbo].[PlanLotPOAddDetail] AS C ON A.TempPOAddId = C.ID\r\n"
			+ "			WHERE A.DataStatus = 'O' and \r\n"
			+ "					a.[GroupNo] is not null and \r\n"
			+ "			(\r\n"
			+ "				( \r\n"
			+ "					b.[DueDate] >= @BeginFourthMonth  and \r\n"
			+ "					b.[DueDate] <= @LastFourthMonth  \r\n"
			+ "					) OR\r\n"
			+ "				( \r\n"
			+ "					C.[DueDate] >= @BeginFourthMonth  and \r\n"
			+ "					C.[DueDate] <= @LastFourthMonth  ) \r\n"
			+ "			) AND \r\n"
			+ "					( b.POId IS NOT NULL or C.DataStatus = 'O')\r\n"
			+ "			group by a.GroupNo ,a.SubGroup \r\n"
			+ "			UNION \r\n"
			+ "			SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "					inner join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "					where a.[PlanSystemDate] is null AND ( \r\n"
			+ "						  b.[DueDate] >= @BeginFourthMonth  and \r\n"
			+ "						  b.[DueDate] <= @LastFourthMonth  \r\n"
			+ "								) \r\n"
			+ "					group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "			union \r\n"
			+ "			SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "					inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
			+ "					where a.[PlanSystemDate] is null AND B.[DataStatus] = 'O'\r\n"
			+ "						AND ( \r\n"
			+ "								b.[DueDate] >= @BeginFourthMonth  and \r\n"
			+ "								b.[DueDate] <= @LastFourthMonth  \r\n"
			+ "								) \r\n"
			+ "					group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "		)AS A\r\n"
			+ "		GROUP BY a.[GroupNo] ,a.[SubGroup] \r\n"
			+ "  \r\n"
			+ "	) as Fourthd on a.[GroupNo] = Fourthd.[GroupNo]  AND A.[SubGroup] = FourthD.[SubGroup]\r\n"
			+ " left join (  \r\n"
			+ "	SELECT   ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup],SUM( TotalPlanSystemDateRedye ) AS TotalPlanSystemDateRedye \r\n"
			+ "	FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is not null and\r\n"
			+ "				b.[DueDate] >= @BeginFourthMonth  and \r\n"
			+ "				b.[DueDate] <= @LastFourthMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O'\r\n"
			+ "		group by a.GroupNo ,a.SubGroup \r\n"
			+ "		UNION\r\n"
			+ "		SELECT distinct b.GroupNo ,b.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is null and  \r\n"
			+ "				b.[DueDate] >= @BeginFourthMonth  and \r\n"
			+ "				b.[DueDate] <= @LastFourthMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O' AND\r\n"
			+ "				a.[PlanSystemDate] is null \r\n"
			+ "		group by b.GroupNo ,b.SubGroup \r\n"
			+ "	) AS A\r\n"
			+ "	GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ " ) as FourthE on a.[GroupNo] = FourthE.[GroupNo]  AND A.[SubGroup] = FourthE.[SubGroup]\r\n"
			+ " \r\n"
			+ " left join (\r\n"
			+ "		SELECT a.[GroupNo],a.[SubGroup] ,CAST( CEILING(   TotalPlanSystemDateForecast / 300) AS INT ) AS TotalPlanSystemDateForecast\r\n"
			+ "		FROM #TempFCRemain AS A \r\n"
			+ "		WHERE \r\n"
			+ "			a.[ForecastDate] >= @BeginFourthMonth and \r\n"
			+ "			a.[ForecastDate] <= @LastFourthMonth \r\n"
			+ "	) as Fourthf on a.[GroupNo] = Fourthf.[GroupNo]  AND A.[SubGroup] = Fourthf.[SubGroup] \r\n"
			+ " left join ( \r\n"
			+ "		select  ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup],sum(TotalPlanSystemDatePO) AS TotalPlanSystemDatePO\r\n"
			+ "		FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "			LEFT join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "			LEFT JOIN [PPMM].[dbo].[PlanLotPOAddDetail] AS C ON A.TempPOAddId = C.ID\r\n"
			+ "			WHERE A.DataStatus = 'O' and \r\n"
			+ "					a.[GroupNo] is not null and \r\n"
			+ "			(\r\n"
			+ "				( \r\n"
			+ "					b.[DueDate] >= @BeginFifthMonth  and \r\n"
			+ "					b.[DueDate] <= @LastFifthMonth  \r\n"
			+ "					) OR\r\n"
			+ "				( \r\n"
			+ "					C.[DueDate] >= @BeginFifthMonth  and \r\n"
			+ "					C.[DueDate] <= @LastFifthMonth  ) \r\n"
			+ "			) AND \r\n"
			+ "					( b.POId IS NOT NULL or C.DataStatus = 'O')\r\n"
			+ "			group by a.GroupNo ,a.SubGroup \r\n"
			+ "			UNION \r\n"
			+ "			SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "					inner join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "					where a.[PlanSystemDate] is null AND ( \r\n"
			+ "								b.[DueDate] >= @BeginFifthMonth  and \r\n"
			+ "								b.[DueDate] <= @LastFifthMonth  \r\n"
			+ "								) \r\n"
			+ "					group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "			union \r\n"
			+ "			SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "					inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
			+ "					where a.[PlanSystemDate] is null AND B.[DataStatus] = 'O'\r\n"
			+ "						AND ( \r\n"
			+ "								b.[DueDate] >= @BeginFifthMonth  and \r\n"
			+ "								b.[DueDate] <= @LastFifthMonth  \r\n"
			+ "								) \r\n"
			+ "					group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "		)AS A\r\n"
			+ "		GROUP BY a.[GroupNo] ,a.[SubGroup]  \r\n"
			+ "	) as Fifthd on a.[GroupNo] = Fifthd.[GroupNo]  AND A.[SubGroup] = FifthD.[SubGroup]\r\n"
			+ " left join ( \r\n"
			+ "	SELECT  ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup],SUM( TotalPlanSystemDateRedye ) AS TotalPlanSystemDateRedye \r\n"
			+ "	FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is not null and\r\n"
			+ "				b.[DueDate] >= @BeginFifthMonth  and \r\n"
			+ "				b.[DueDate] <= @LastFifthMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O'\r\n"
			+ "		group by a.GroupNo ,a.SubGroup \r\n"
			+ "		UNION\r\n"
			+ "		SELECT distinct b.GroupNo ,b.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is null and  \r\n"
			+ "				b.[DueDate] >= @BeginFifthMonth  and \r\n"
			+ "				b.[DueDate] <= @LastFifthMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O' AND\r\n"
			+ "				a.[PlanSystemDate] is null \r\n"
			+ "		group by b.GroupNo ,b.SubGroup \r\n"
			+ "	) AS A\r\n"
			+ "	GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ " ) as FifthE on a.[GroupNo] = FifthE.[GroupNo]  AND A.[SubGroup] = FifthE.[SubGroup]\r\n"
			+ " \r\n"
			+ " left join (\r\n"
			+ "		SELECT a.[GroupNo],a.[SubGroup] ,CAST( CEILING(   TotalPlanSystemDateForecast / 300) AS INT ) AS TotalPlanSystemDateForecast\r\n"
			+ "		FROM #TempFCRemain AS A \r\n"
			+ "		WHERE \r\n"
			+ "			a.[ForecastDate] >= @BeginFifthMonth and \r\n"
			+ "			a.[ForecastDate] <= @LastFifthMonth \r\n"
			+ "	) as Fifthf on a.[GroupNo] = Fifthf.[GroupNo]  AND A.[SubGroup] = Fifthf.[SubGroup]\r\n"

			+ " left join ( \r\n"
			+ "		select  ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup],sum(TotalPlanSystemDatePO) AS TotalPlanSystemDatePO\r\n"
			+ "		FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "			LEFT join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "			LEFT JOIN [PPMM].[dbo].[PlanLotPOAddDetail] AS C ON A.TempPOAddId = C.ID\r\n"
			+ "			WHERE A.DataStatus = 'O' and \r\n"
			+ "					a.[GroupNo] is not null and \r\n"
			+ "			(\r\n"
			+ "				( \r\n"
			+ "					b.[DueDate] >= @BeginSixthMonth  and \r\n"
			+ "					b.[DueDate] <= @LastSixthMonth  \r\n"
			+ "					) OR\r\n"
			+ "				( \r\n"
			+ "					C.[DueDate] >= @BeginSixthMonth  and \r\n"
			+ "					C.[DueDate] <= @LastSixthMonth  ) \r\n"
			+ "			) AND \r\n"
			+ "					( b.POId IS NOT NULL or C.DataStatus = 'O')\r\n"
			+ "			group by a.GroupNo ,a.SubGroup \r\n"
			+ "			UNION \r\n"
			+ "			SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "					inner join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
			+ "					where a.[PlanSystemDate] is null AND ( \r\n"
			+ "								b.[DueDate] >= @BeginSixthMonth  and \r\n"
			+ "								b.[DueDate] <= @LastSixthMonth  \r\n"
			+ "								) \r\n"
			+ "					group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "			union \r\n"
			+ "			SELECT distinct B.GroupNo ,b.SubGroup , COUNT(DISTINCT b.[Id] ) as TotalPlanSystemDatePO\r\n"
			+ "			  		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "					inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
			+ "					where a.[PlanSystemDate] is null AND B.[DataStatus] = 'O'\r\n"
			+ "						AND ( \r\n"
			+ "								b.[DueDate] >= @BeginSixthMonth  and \r\n"
			+ "								b.[DueDate] <= @LastSixthMonth  \r\n"
			+ "								) \r\n"
			+ "					group by b.[GroupNo] , b.[SubGroup]\r\n"
			+ "		)AS A\r\n"
			+ "		GROUP BY a.[GroupNo] ,a.[SubGroup]  \r\n"
			+ "	) as Sixthd on a.[GroupNo] = Sixthd.[GroupNo] AND\r\n"
			+ "                A.[SubGroup] = SixthD.[SubGroup]\r\n"
			+ " left join ( \r\n"
			+ "	  SELECT  ISNULL(a.[GroupNo], 'GTEMP') AS [GroupNo], ISNULL(a.[SubGroup], '') AS [SubGroup],SUM( TotalPlanSystemDateRedye ) AS TotalPlanSystemDateRedye \r\n"
			+ "	  FROM (\r\n"
			+ "		SELECT distinct a.GroupNo ,a.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is not null and\r\n"
			+ "				b.[DueDate] >= @BeginSixthMonth  and \r\n"
			+ "				b.[DueDate] <= @LastSixthMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O'\r\n"
			+ "		group by a.GroupNo ,a.SubGroup \r\n"
			+ "		UNION\r\n"
			+ "		SELECT distinct b.GroupNo ,b.SubGroup , COUNT(DISTINCT a.[Id] ) as TotalPlanSystemDateRedye\r\n"
			+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
			+ "		INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
			+ "		WHERE A.DataStatus = 'O' and \r\n"
			+ "				a.[GroupNo] is null and  \r\n"
			+ "				b.[DueDate] >= @BeginSixthMonth  and \r\n"
			+ "				b.[DueDate] <= @LastSixthMonth AND  \r\n"
			+ "				A.ReDyeId IS NOT NULL and \r\n"
			+ "				b.DataStatus = 'O' AND\r\n"
			+ "				a.[PlanSystemDate] is null \r\n"
			+ "		group by b.GroupNo ,b.SubGroup \r\n"
			+ "	) AS A\r\n"
			+ "	GROUP BY a.[GroupNo] ,a.[SubGroup]\r\n"
			+ " ) as SixthE on a.[GroupNo] = SixthE.[GroupNo] AND\r\n"
			+ "                A.[SubGroup] = SixthE.[SubGroup]\r\n"
			+ " \r\n"
			+ " left join (\r\n"
			+ "		SELECT a.[GroupNo],a.[SubGroup] ,CAST( CEILING(   TotalPlanSystemDateForecast / 300) AS INT ) AS TotalPlanSystemDateForecast\r\n"
			+ "		FROM #TempFCRemain AS A \r\n"
			+ "		WHERE \r\n"
			+ "			a.[ForecastDate] >= @BeginSixthMonth and \r\n"
			+ "			a.[ForecastDate] <= @LastSixthMonth \r\n"
			+ "	) as Sixthf on a.[GroupNo] = Sixthf.[GroupNo]  AND\r\n"
			+ "                A.[SubGroup] = Sixthf.[SubGroup]\r\n"

			+ " LEFT JOIN (\r\n"
			+ "	select GroupNo ,SubGroup \r\n"
			+ "	,CASE \r\n"
			+ "		WHEN LotPerDay > 0 THEN CEILING( (ISNULL(TotalLotBeforeSelectMonth,0)  * 1.0 ) / LotPerDay )\r\n"
			+ "		ELSE 0 \r\n"
			+ "		END as BeforeIndexDyeDate\r\n"
			+ "		from (  \r\n"
			+ "			SELECT distinct a.GroupNo,B.[SubGroup]    \r\n"
			+ "			   ,b.[LotPerDay]\r\n"
			+ "				  , ISNULL(\r\n"
			+ "						(\r\n"
			+ "						SELECT SUM(TotalPlanSystemDateForecast) \r\n"
			+ "						FROM (\r\n"
			+ "							SELECT 'G1' as [GroupNo],'1' as [SubGroup] ,0 AS Id,CEILING(   RemainBLQty / 300) AS TotalPlanSystemDateForecast\r\n"
			+ "							FROM #tempFCDate AS A \r\n"
			+ "							WHERE \r\n"
			+ "								a.[ForecastDate] > @BeginDateFirst and \r\n"
			+ "								a.[ForecastDate] < @LastFirstMonth \r\n"
			+ "							UNION\r\n"
			+ "							SELECT 'G3' as [GroupNo],'1' as [SubGroup]  ,0 AS Id,CEILING(RemainNonBLQty / 300) AS TotalPlanSystemDateForecast\r\n"
			+ "							FROM #tempFCDate AS A \r\n"
			+ "								WHERE \r\n"
			+ "								a.[ForecastDate] > @BeginDateFirst and \r\n"
			+ "								a.[ForecastDate] < @LastFirstMonth \r\n"
			+ "						)   AS SUB_A\r\n"
			+ "						WHERE A.[GroupNo] = SUB_A.[GroupNo] and\r\n"
			+ "                           B.[SubGroup] = SUB_A.[GroupNo] \r\n"
			+ "					),0) \r\n"
			+ "					as TotalLotBeforeSelectMonth \r\n"
			+ "				 FROM [PPMM].[dbo].[InputMainGroupDetail] as a\r\n"
			+ "				 inner join [PPMM].[dbo].[InputSubGroupDeail] as b on a.[GroupNo] = b.[GroupNo]  \r\n"
			+ "		) as a\r\n"
			+ "	 ) AS BEFIDX ON A.GroupNo = BEFIDX.[GroupNo] AND \r\n"
			+ "                 A.[SubGroup] = BEFIDX.[SubGroup]  \r\n"
			+ "  ) AS A\r\n"
			+ " \r\n"
			+ "";
	// private String leftJoinFIDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS FIDD ON MAIN.[GroupNo] = FIDD.[GroupNo] AND MAIN.[SubGroup] = FIDD.[SubGroup] AND MAIN.[FirstIndexDyeDateForCal] = FIDD.[RowNum]\r\n"
//			+ "";
//	private String leftJoinSEDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS SEDD ON MAIN.[GroupNo] = SEDD.[GroupNo] AND MAIN.[SubGroup] = SEDD.[SubGroup] AND MAIN.[SecondIndexDyeDateForCal] = SEDD.[RowNum] \r\n"
//			+ "";
//	private String leftJoinTHDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS THDD ON MAIN.[GroupNo] = THDD.[GroupNo] AND MAIN.[SubGroup] = THDD.[SubGroup] AND MAIN.[ThirdIndexDyeDateForCal] = THDD.[RowNum]\r\n"
//			+ "";
//
//
//	private String leftJoinDM_FIDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS DM_FIDD ON MAIN.[GroupNo] = DM_FIDD.[GroupNo] AND MAIN.[SubGroup] = DM_FIDD.[SubGroup] AND MAIN.[FirstIndexDMDate] = DM_FIDD.[RowNum]\r\n"
//			+ "";
//	private String leftJoinDM_SEDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS DM_SEDD ON MAIN.[GroupNo] = DM_SEDD.[GroupNo] AND MAIN.[SubGroup] = DM_SEDD.[SubGroup] AND MAIN.[SecondIndexDMDate] = DM_SEDD.[RowNum] \r\n"
//			+ "";
//	private String leftJoinDM_THDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS DM_THDD ON MAIN.[GroupNo] = DM_THDD.[GroupNo] AND MAIN.[SubGroup] = DM_THDD.[SubGroup] AND MAIN.[ThirdIndexDMDate] = DM_THDD.[RowNum]\r\n"
//			+ "";
//
//	private String leftJoinEX_FIDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS EX_FIDD ON MAIN.[GroupNo] = EX_FIDD.[GroupNo] AND MAIN.[SubGroup] = EX_FIDD.[SubGroup] AND MAIN.[FirstIndexEXDate] = EX_FIDD.[RowNum]\r\n"
//			+ "";
//	private String leftJoinEX_SEDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS EX_SEDD ON MAIN.[GroupNo] = EX_SEDD.[GroupNo] AND MAIN.[SubGroup] = EX_SEDD.[SubGroup] AND MAIN.[SecondIndexEXDate] = EX_SEDD.[RowNum] \r\n"
//			+ "";
//	private String leftJoinEX_THDD = ""
//			+ "  LEFT JOIN #TempWorkDateRunning AS EX_THDD ON MAIN.[GroupNo] = EX_THDD.[GroupNo] AND MAIN.[SubGroup] = EX_THDD.[SubGroup] AND MAIN.[ThirdIndexEXDate] = EX_THDD.[RowNum]\r\n"
//			;
	private String leftJoinFIDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS FIDD ON MAIN.[FirstIndexDyeDateForCal] = FIDD.[RowNum]\r\n" + "";
	private String leftJoinSEDD = ""
			+ "  LEFT JOIN #TempWorkDateRunning AS SEDD ON MAIN.[SecondIndexDyeDateForCal] = SEDD.[RowNum] \r\n"
			+ "";
	private String leftJoinTHDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS THDD ON MAIN.[ThirdIndexDyeDateForCal] = THDD.[RowNum]\r\n" + "";
	private String leftJoinDM_FIDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS DM_FIDD on MAIN.[FirstIndexDMDate] = DM_FIDD.[RowNum]\r\n" + "";
	private String leftJoinDM_SEDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS DM_SEDD ON MAIN.[SecondIndexDMDate] = DM_SEDD.[RowNum] \r\n" + "";

	private String leftJoinDM_THDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS DM_THDD ON MAIN.[ThirdIndexDMDate] = DM_THDD.[RowNum]\r\n" + "";
	private String leftJoinDM_FOURTHDD = "\r\n"
			+ "	  LEFT JOIN #TempWorkDateRunning AS DM_FOURTHDD ON MAIN.[FourthIndexDMDate] = DM_FOURTHDD.[RowNum]\r\n"
			+ "";
	private String leftJoinDM_FIFTHDD = "\r\n"
			+ "	  LEFT JOIN #TempWorkDateRunning AS DM_FIFTHDD ON MAIN.[FifthIndexDMDate] = DM_FIFTHDD.[RowNum]\r\n"
			+ "";

	private String leftJoinDM_SIXTHDD = "\r\n"
			+ "	  LEFT JOIN #TempWorkDateRunning AS DM_SIXTHDD ON MAIN.[SixthIndexDMDate] = DM_SIXTHDD.[RowNum]\r\n"
			+ "";
	private String leftJoinEX_FIDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS EX_FIDD ON MAIN.[FirstIndexEXDate] = EX_FIDD.[RowNum]\r\n" + "";
	private String leftJoinEX_SEDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS EX_SEDD ON MAIN.[SecondIndexEXDate] = EX_SEDD.[RowNum] \r\n" + "";
	private String leftJoinEX_THDD =
			"" + "  LEFT JOIN #TempWorkDateRunning AS EX_THDD ON MAIN.[ThirdIndexEXDate] = EX_THDD.[RowNum]\r\n";
	private String mainSelectMonthlyCap = ""
			+ "select \r\n"
			+ "			MAIN.[GroupNo]\r\n"
			+ "		  , MAIN.[SubGroup]\r\n"
			+ "		  , MAIN.[Description]  \r\n"
			+ "		  , MAIN.[ColorType]\r\n"
			+ "		  , MAIN.[GroupType]\r\n"
			+ "		  , MAIN.[MeterPerLot]\r\n"
			+ "		  , MAIN.[LotPerDay] \r\n"
			+ "		  --, MAIN.[FirstTotalWorkDate]\r\n"
			+ "		  --, MAIN.[FirstTotalLotWorkDate]\r\n"
			+ "		  , MAIN.FirstTotolLotPlanDate\r\n"
			+ "		  , MAIN.[FirstTotalPlanSystemDatePO]\r\n"
			+ "		  , MAIN.[FirstTotalPlanSystemDateRedye]\r\n"
			+ "		  , MAIN.[FirstTotalPlanSystemDateForecast]\r\n"
			+ "		  --, MAIN.[FirstRemainCapacityLot]\r\n"
			+ "		  --, MAIN.[FirstRemainCapacityMeter] \r\n"
			+ "		  , CAST( MAIN.[FirstIndexDyeDate] AS INT ) AS FirstRequiredDate  \r\n"
			+ "		  --, MAIN.[SecondTotalWorkDate]\r\n"
			+ "		  --, MAIN.[SecondTotalLotWorkDate]\r\n"
			+ "		  , MAIN.SecondTotolLotPlanDate\r\n"
			+ "		  , MAIN.[SecondTotalPlanSystemDatePO]\r\n"
			+ "		  , MAIN.[SecondTotalPlanSystemDateRedye]\r\n"
			+ "		  , MAIN.[SecondTotalPlanSystemDateForecast] \r\n"
			+ "		  --, MAIN.[SecondRemainCapacityLot]\r\n"
			+ "		  --, MAIN.[SecondRemainCapacityMeter] \r\n"
			+ "		  , CAST( MAIN.[SecondIndexDyeDate] AS INT )  AS SecondRequiredDate  \r\n"
			+ "		  --, MAIN.[ThirdTotalWorkDate]\r\n"
			+ "		  --, MAIN.[ThirdTotalLotWorkDate]\r\n"
			+ "		  , MAIN.ThirdTotolLotPlanDate\r\n"
			+ "		  , MAIN.[ThirdTotalPlanSystemDatePO]\r\n"
			+ "		  , MAIN.[ThirdTotalPlanSystemDateRedye]\r\n"
			+ "		  , MAIN.[ThirdTotalPlanSystemDateForecast] \r\n"

			+ "		  , MAIN.FourthTotolLotPlanDate\r\n"
			+ "		  , MAIN.[FourthTotalPlanSystemDatePO]\r\n"
			+ "		  , MAIN.[FourthTotalPlanSystemDateRedye]\r\n"
			+ "		  , MAIN.[FourthTotalPlanSystemDateForecast] \r\n"

			+ "		  , MAIN.FifthTotolLotPlanDate\r\n"
			+ "		  , MAIN.[FifthTotalPlanSystemDatePO]\r\n"
			+ "		  , MAIN.[FifthTotalPlanSystemDateRedye]\r\n"
			+ "		  , MAIN.[FifthTotalPlanSystemDateForecast] \r\n"

			+ "		  , MAIN.SixthTotolLotPlanDate\r\n"
			+ "		  , MAIN.[SixthTotalPlanSystemDatePO]\r\n"
			+ "		  , MAIN.[SixthTotalPlanSystemDateRedye]\r\n"
			+ "		  , MAIN.[SixthTotalPlanSystemDateForecast] \r\n"

			+ "		  --, MAIN.[ThirdRemainCapacityLot]\r\n"
			+ "		  --, MAIN.[ThirdRemainCapacityMeter] \r\n"
			+ "		  , CAST( MAIN.[ThirdIndexDyeDate] AS INT )  AS ThirdRequiredDate  , CASE \r\n"
			+ "				WHEN FIDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE FIDD.[WorkDate] \r\n"
			+ "				END AS FirstDyeDate \r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN SEDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE SEDD.[WorkDate] \r\n"
			+ "				END AS SecondDyeDate\r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN THDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE THDD.[WorkDate] \r\n"
			+ "				END AS ThirdDyeDate \r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN DM_FIDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE DM_FIDD.[WorkDate] \r\n"
			+ "				END AS FirstDMDate\r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN DM_SEDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE DM_SEDD.[WorkDate] \r\n"
			+ "				END AS SecondDMDate\r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN DM_THDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE DM_THDD.[WorkDate] \r\n"
			+ "				END AS ThirdDMDate\r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN EX_FIDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE EX_FIDD.[WorkDate] \r\n"
			+ "				END AS FirstEXDate\r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN EX_SEDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE EX_SEDD.[WorkDate] \r\n"
			+ "				END AS SecondEXDate\r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN EX_THDD.[WorkDate] is null THEN @nullDate\r\n"
			+ "				ELSE EX_THDD.[WorkDate] \r\n"
			+ "				END AS ThirdEXDate		  \r\n"
			+ "		  , CASE \r\n"
			+ "				WHEN DM_FIDD.[WorkDate] > @LastFirstMonth THEN ISNULL(CAST ( -1 * (SELECT  count(WorkDate )\r\n"
			+ "																				FROM #TempWorkDateRunning\r\n"
			+ "																				WHERE @LastFirstMonth <= WorkDate AND WorkDate <= DM_FIDD.[WorkDate] \r\n"
			+ "																			) AS INT ), 0 ) \r\n"
			+ "				ELSE \r\n"
			+ "					ISNULL( CAST (  (SELECT  count(WorkDate )\r\n"
			+ "						FROM #TempWorkDateRunning\r\n"
			+ "						WHERE DM_FIDD.[WorkDate] <= WorkDate AND WorkDate <= @LastFirstMonth   \r\n"
			+ "					 ) AS INT ) , 0 )\r\n"
			+ "				END AS [FirstTotalWorkDate]\r\n"
			+ "		  ,CASE \r\n"
			+ "				WHEN DM_SEDD.[WorkDate] > @LastSecondMonth THEN ISNULL( CAST ( -1 * (SELECT  count(WorkDate ) \r\n"
			+ "																				FROM #TempWorkDateRunning\r\n"
			+ "																				WHERE @LastSecondMonth <= WorkDate AND WorkDate <= DM_SEDD.[WorkDate] \r\n"
			+ "																		) AS INT ), 0 )\r\n"
			+ "				ELSE ISNULL( CAST (  (SELECT  count(WorkDate ) \r\n"
			+ "										FROM #TempWorkDateRunning\r\n"
			+ "										WHERE DM_SEDD.[WorkDate] <= WorkDate AND WorkDate <= @LastSecondMonth   \r\n"
			+ "								) AS INT ), 0 )\r\n"
			+ "				END AS [SecondTotalWorkDate]\r\n"
			+ "		  ,CASE \r\n"
			+ "				WHEN DM_THDD.[WorkDate] > @LastThirdMonth THEN  ISNULL(CAST (  -1 * (SELECT  count(WorkDate )\r\n"
			+ "																				FROM #TempWorkDateRunning\r\n"
			+ "																				WHERE @LastThirdMonth <= WorkDate AND WorkDate <= DM_THDD.[WorkDate] \r\n"
			+ "																				) AS INT ), 0 )\r\n"
			+ "				ELSE ISNULL(CAST ( (SELECT  count(WorkDate )\r\n"
			+ "						FROM #TempWorkDateRunning\r\n"
			+ "						WHERE DM_THDD.[WorkDate] <= WorkDate AND WorkDate <= @LastThirdMonth   \r\n"
			+ "						) AS INT ), 0 )   \r\n"
			+ "				END AS [ThirdTotalWorkDate]			  ,\r\n"
			+ "			--CASE \r\n"
			+ "				--WHEN DM_FOURTHDD.[WorkDate] > @LastFourthMonth THEN  ISNULL(CAST (  -1 * (SELECT  count(WorkDate )\r\n"
			+ "				--																FROM #TempWorkDateRunning\r\n"
			+ "				--																WHERE @LastFourthMonth <= WorkDate AND WorkDate <= DM_FOURTHDD.[WorkDate] \r\n"
			+ "				--																) AS INT ), 0 )\r\n"
			+ "				--ELSE\r\n"
			+ "				ISNULL(CAST ( (SELECT  count(WorkDate )\r\n"
			+ "						FROM #TempWorkDateRunning\r\n"
			+ "						WHERE @BeginFourthMonth <= WorkDate AND WorkDate <= @LastFourthMonth   \r\n"
			+ "						) AS INT ), 0 )   \r\n"
			+ "				--END \r\n"
			+ "				AS [FourthTotalWorkDate]\r\n"
			+ "				\r\n"
			+ "		  ,\r\n"
			+ "			--CASE \r\n"
			+ "				--WHEN DM_FIFTHDD.[WorkDate] > @LastFifthMonth THEN  ISNULL(CAST (  -1 * (SELECT  count(WorkDate )\r\n"
			+ "				--																FROM #TempWorkDateRunning\r\n"
			+ "				--																WHERE @LastFifthMonth <= WorkDate AND WorkDate <= DM_FIFTHDD.[WorkDate] \r\n"
			+ "				--																) AS INT ), 0 )\r\n"
			+ "				--ELSE \r\n"
			+ "				ISNULL(CAST ( (SELECT  count(WorkDate )\r\n"
			+ "						FROM #TempWorkDateRunning\r\n"
			+ "						WHERE @BeginFifthMonth <= WorkDate AND WorkDate <= @LastFifthMonth \r\n"
			+ "						) AS INT ), 0 )   \r\n"
			+ "				--END \r\n"
			+ "				AS [FifthTotalWorkDate]\r\n"
			+ "				\r\n"
			+ "		  ,\r\n"
			+ "			--CASE \r\n"
			+ "				--WHEN DM_SIXTHDD.[WorkDate] > @LastSixthMonth THEN  ISNULL(CAST (  -1 * (SELECT  count(WorkDate )\r\n"
			+ "				--																FROM #TempWorkDateRunning\r\n"
			+ "				--																WHERE @LastSixthMonth <= WorkDate AND WorkDate <= DM_SIXTHDD.[WorkDate] \r\n"
			+ "				--																) AS INT ), 0 )\r\n"
			+ "				--ELSE \r\n"
			+ "				ISNULL(CAST ( (SELECT  count(WorkDate )\r\n"
			+ "						FROM #TempWorkDateRunning\r\n"
			+ "						WHERE @BeginSixthMonth  <= WorkDate AND WorkDate <= @LastSixthMonth\r\n"
			+ "						) AS INT ), 0 ) \r\n"
			+ "				--END \r\n"
			+ "				AS [SixthTotalWorkDate]	\r\n" 
	;
	private String mainFromMonthly = "" 
			+ "  from (\r\n"
			+ "  SELECT \r\n"
			+ "   *\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN FirstIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexDM + FirstIndexDyeDateForCal \r\n"
			+ "		END AS FirstIndexDMDate\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN SecondIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexDM + SecondIndexDyeDateForCal \r\n"
			+ "		END AS SecondIndexDMDate\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN ThirdIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexDM + ThirdIndexDyeDateForCal \r\n"
			+ "		END AS ThirdIndexDMDate\r\n"

			+ "  ,CASE\r\n"
			+ "		WHEN FirstIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexEX + FirstIndexDyeDateForCal \r\n"
			+ "		END AS FirstIndexEXDate\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN SecondIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexEX + SecondIndexDyeDateForCal \r\n"
			+ "		END AS SecondIndexEXDate\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN ThirdIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexEX + ThirdIndexDyeDateForCal \r\n"
			+ "		END AS ThirdIndexEXDate\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN FourthIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexDM + FourthIndexDyeDateForCal \r\n"
			+ "		END AS FourthIndexDMDate\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN FifthIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexDM + FifthIndexDyeDateForCal \r\n"
			+ "		END AS FifthIndexDMDate\r\n"
			+ "  ,CASE\r\n"
			+ "		WHEN SixthIndexDyeDateForCal = 0 THEN 0 \r\n"
			+ "		ELSE @IndexDM + SixthIndexDyeDateForCal \r\n"
			+ "		END AS SixthIndexDMDate\r\n"
			+ "  FROM ( \r\n"
			+ "			SELECT * \r\n"
			+ "			, CASE\r\n"
			+ "				WHEN FirstIndexDyeDate + BeforeIndexDyeDate = 0 THEN 2 + @IndexAddDaysFirstMonth\r\n"
			+ "				ELSE FirstIndexDyeDate + BeforeIndexDyeDate + @IndexAddDaysFirstMonth\r\n"
			+ "				END AS FirstIndexDyeDateForCal\r\n"
			+ "			, CASE\r\n"
			+ "				WHEN FirstIndexDyeDate + SecondIndexDyeDate + BeforeIndexDyeDate = 0 THEN 2 + @IndexAddDaysSecondMonth\r\n"
			+ "				ELSE FirstIndexDyeDate + SecondIndexDyeDate + BeforeIndexDyeDate + @IndexAddDaysSecondMonth\r\n"
			+ "				END AS SecondIndexDyeDateForCal\r\n"
			+ "			, CASE\r\n"
			+ "				WHEN FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + BeforeIndexDyeDate  = 0 THEN 2 + @IndexAddDaysThirdMonth\r\n"
			+ "				ELSE FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + BeforeIndexDyeDate + @IndexAddDaysThirdMonth\r\n"
			+ "				END AS ThirdIndexDyeDateForCal\r\n"
			+ "			, CASE\r\n"
			+ "				WHEN FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + FourthIndexDyeDate + BeforeIndexDyeDate  = 0 THEN 2 + @IndexAddDaysFourthMonth\r\n"
			+ "				ELSE FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + FourthIndexDyeDate + BeforeIndexDyeDate + @IndexAddDaysFourthMonth\r\n"
			+ "				END AS FourthIndexDyeDateForCal \r\n"
			+ "			, CASE\r\n"
			+ "				WHEN FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + FourthIndexDyeDate + FifthIndexDyeDate + BeforeIndexDyeDate  = 0 THEN 2 + @IndexAddDaysFifthMonth\r\n"
			+ "				ELSE FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + FourthIndexDyeDate + FifthIndexDyeDate + BeforeIndexDyeDate + @IndexAddDaysFifthMonth\r\n"
			+ "				END AS FifthIndexDyeDateForCal \r\n"
			+ "			, CASE\r\n"
			+ "				WHEN FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + FourthIndexDyeDate + FifthIndexDyeDate + SixthIndexDyeDate + BeforeIndexDyeDate  = 0 THEN 2 + @IndexAddDaysSixthMonth\r\n"
			+ "				ELSE FirstIndexDyeDate + SecondIndexDyeDate + ThirdIndexDyeDate + FourthIndexDyeDate + FifthIndexDyeDate + SixthIndexDyeDate + BeforeIndexDyeDate + @IndexAddDaysSixthMonth\r\n"
			+ "				END AS SixthIndexDyeDateForCal  \r\n"
			+ "			FROM #TempMainData \r\n" 
			+ "		) as a"
			+ "  ) AS MAIN  \r\n";

	private String declareMainMonthly = " "
			+ "   IF OBJECT_ID('tempdb..#TempMainMonthly') IS NOT NULL \r\n"
			+ "		DROP TABLE #TempMainMonthly; \r\n"
			+ " SELECT *\r\n" 
			+ "		--, ( A.FirstTotalLotWorkDate - FirstTotolLotPlanDate ) * MeterPerLot	 as FirstRemainCapacityMeter\r\n"
			+ "		--, A.SecondTotalLotWorkDate - SecondTotolLotPlanDate as SecondRemainCapacityLot\r\n"
			+ "		--, ( A.SecondTotalLotWorkDate - SecondTotolLotPlanDate ) * MeterPerLot	 as SecondRemainCapacityMeter\r\n"
			+ "		--, A.ThirdTotalLotWorkDate - ThirdTotolLotPlanDate as ThirdRemainCapacityLot\r\n"
			+ "		--, ( A.ThirdTotalLotWorkDate - ThirdTotolLotPlanDate ) * MeterPerLot	 as ThirdRemainCapacityMeter\r\n"
			+ "		--, ( A.FourthTotalLotWorkDate - FourthTotolLotPlanDate ) * MeterPerLot as FourthRemainCapacityMeter \r\n"
			+ "		--, ( A.FifthTotalLotWorkDate - FifthTotolLotPlanDate ) * MeterPerLot	 as FifthRemainCapacityMeter \r\n"
			+ "		--, ( A.SixthTotalLotWorkDate - SixthTotolLotPlanDate ) * MeterPerLot	 as SixthRemainCapacityMeter\r\n"
			+ "		\r\n"
			+ "		, A.FirstTotalLotWorkDate  as FirstRemainCapacityLot\r\n"
			+ "		, ( A.FirstTotalLotWorkDate ) * MeterPerLot	 as FirstRemainCapacityMeter\r\n"
			+ "		, A.SecondTotalLotWorkDate as SecondRemainCapacityLot\r\n"
			+ "		, ( A.SecondTotalLotWorkDate ) * MeterPerLot	 as SecondRemainCapacityMeter\r\n"
			+ "		, A.ThirdTotalLotWorkDate as ThirdRemainCapacityLot\r\n"
			+ "		, ( A.ThirdTotalLotWorkDate ) * MeterPerLot	 as ThirdRemainCapacityMeter\r\n"
			+ "		, ( A.FourthTotalLotWorkDate ) * MeterPerLot as FourthRemainCapacityMeter \r\n"
			+ "		, ( A.FifthTotalLotWorkDate ) * MeterPerLot	 as FifthRemainCapacityMeter \r\n"
			+ "		, ( A.SixthTotalLotWorkDate  ) * MeterPerLot	 as SixthRemainCapacityMeter\r\n"
			+ " into #TempMainMonthly\r\n"
			+ " FROM (\r\n"
			+ "	 select *   \r\n"
			+ "		 ,CASE		\r\n"
			+ "				WHEN @ISFirstPast = 1 THEN 0\r\n"
			+ "				ELSE FirstTotalWorkDate * A.LotPerDay \r\n"
			+ "				END as FirstTotalLotWorkDate\r\n"
			+ "		 ,CASE		\r\n"
			+ "				WHEN @ISSecondPast = 1 THEN 0\r\n"
			+ "				ELSE SecondTotalWorkDate * A.LotPerDay \r\n"
			+ "				END as SecondTotalLotWorkDate\r\n"
			+ "		 ,CASE		\r\n"
			+ "				WHEN @ISThirdPast = 1 THEN 0\r\n"
			+ "				ELSE ThirdTotalWorkDate * A.LotPerDay \r\n"
			+ "				END as ThirdTotalLotWorkDate\r\n"
			+ "		 ,CASE		\r\n"
			+ "				WHEN @ISFourthPast = 1 THEN 0\r\n"
			+ "				ELSE FourthTotalWorkDate * A.LotPerDay \r\n"
			+ "				END as FourthTotalLotWorkDate\r\n"
			+ "		 ,CASE		\r\n"
			+ "				WHEN @ISFifthPast = 1 THEN 0\r\n"
			+ "				ELSE FifthTotalWorkDate * A.LotPerDay \r\n"
			+ "				END as FifthTotalLotWorkDate\r\n"
			+ "		 ,CASE		\r\n"
			+ "				WHEN @ISSixthPast = 1 THEN 0\r\n"
			+ "				ELSE SixthTotalWorkDate * A.LotPerDay \r\n"
			+ "				END as SixthTotalLotWorkDate\r\n"
			+ "	 from (\r\n"
			+ this.mainSelectMonthlyCap
			+ this.mainFromMonthly
			+ this.leftJoinFIDD
			+ this.leftJoinSEDD
			+ this.leftJoinTHDD
			+ this.leftJoinDM_FIDD
			+ this.leftJoinDM_SEDD
			+ this.leftJoinDM_THDD
			+ this.leftJoinDM_FOURTHDD
			+ this.leftJoinDM_FIFTHDD
			+ this.leftJoinDM_SIXTHDD
			+ this.leftJoinEX_FIDD
			+ this.leftJoinEX_SEDD
			+ this.leftJoinEX_THDD
			+ "	  ) as a\r\n"
			+ " ) AS A\r\n";

	public MonthlyCapWithDueDateReportDaoImpl(Database database2, String conType) {
		this.database = database2;
		this.message = "";
		this.conType = conType;
	}

	@Override
	public ArrayList<PlanningReportDetail> getBlankGroupMonthlyCapReportDetail(
			ArrayList<InputDateRunningDetail> poList) {
		ArrayList<PlanningReportDetail> list = null;
		InputDateRunningDetail bean = poList.get(0);
		String MMyyyy = bean.getDate();
		String where = "";
		if ( ! where.equals("")) {
			where = " where " + where;
		}
		String begin = "01/" + MMyyyy;
		String declarePlan = ""
				+ " declare @BeginDateFirst date  = convert(date, '" + begin + "', 103) ;\r\n"
				+ " declare @today date  = cast(GETDATE() as date) ;\r\n"
				+ " declare @nullDate date  = cast(NULL as date) ;\r\n";
		String sql = ""
				+ "	SET NOCOUNT ON;\r\n"
				+ declarePlan
				+ this.delcareMain 
				+ "	SELECT distinct b.PO, b.POType ,b.CustomerName,b.CustomerMat,B.MaterialNumber,b.LotNo,B.Batch,B.QuantityMR,B.GroupNo ,b.SubGroup ,b.GreigeDue,b.CustomerDue,b.DueDate\r\n"
				+ "		,B.LabNo,B.Shade,B.BookNo,B.UserStatus,B.LabStatus,C.PlanningRemark,b.[FGDesign] as Design,b.QuantityKG\r\n"
				+ "	FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
				+ "	inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
				+ "	LEFT JOIN [PPMM].[dbo].[InputPlanningRemark] AS C ON A.ProductionOrder = C.ProductionOrder\r\n"
				+ "	where a.[TempPOAddId] is not null and\r\n"
				+ "		  A.DataStatus = 'O' and  \r\n"
				+ "		  a.[PlanSystemDate] is null AND \r\n"
				+ "		  b.[GroupNo] is null and\r\n"
				+ "		  B.[DataStatus] = 'O' AND \r\n"
				+ "		  b.[DueDate] <= @LastThirdMonth    \r\n"
				+ "	union\r\n"
				+ "	SELECT distinct  b.PurchaseOrder AS PO, b.POType ,b.CustomerName,b.CustomerMat,B.MaterialNumber,b.LotNo,B.Batch,B.QuantityMR,B.GroupNo ,b.SubGroup ,b.GreigeDue,b.CustomerDue,b.DueDate\r\n"
				+ "		,B.LabNo,B.Shade,B.BookNo,B.UserStatus,B.LabStatus,C.PlanningRemark,b.[FGDesign] as Design,b.QuantityKG\r\n"
				+ "	FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
				+ "	INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
				+ "	LEFT JOIN [PPMM].[dbo].[InputPlanningRemark] AS C ON A.ProductionOrder = C.ProductionOrder\r\n"
				+ "	WHERE	\r\n"
				+ "			A.ReDyeId IS NOT NULL and \r\n"
				+ "			A.DataStatus = 'O' and  \r\n"
				+ "			a.[PlanSystemDate] is null  AND \r\n"
				+ "			b.[GroupNo] is null and\r\n"
				+ "			b.DataStatus = 'O' AND  \r\n"
				+ "			b.[DueDate] <= @LastThirdMonth    \r\n" 
		; 
		List<Map<String, Object>> datas = this.database.queryList(sql);
		list = new ArrayList<>();
		for (Map<String, Object> map : datas) {
			list.add(this.bcModel._genPlanningReportDetail(map));
		}
		return list;
	}

	public String getMessage() {
		return this.message;
	}

	@Override
	public ArrayList<MonthlyCapWithDueDateReportDetail> getMonthlyCapWithDueDateReportDetail(
			ArrayList<InputDateRunningDetail> poList) {
		ArrayList<MonthlyCapWithDueDateReportDetail> list = null;
		InputDateRunningDetail bean = poList.get(0);
		String MMyyyy = bean.getDate();
		String where = "";
		if ( ! where.equals("")) {
			where = " where " + where;
		}
		String begin = "01/" + MMyyyy;
		String declarePlan = ""
				+ " declare @BeginDateFirst date  = convert(date, '" + begin + "', 103) ;\r\n"
				+ " declare @today date  = cast(GETDATE() as date) ;\r\n"
				+ " declare @nullDate date  = cast(NULL as date) ;\r\n";
		String sql = ""
				+ "	SET NOCOUNT ON; "
				+ declarePlan
				+ this.delcareMain
				+ this.declareTempWorkDateRunning
				+ this.declareTotalDays
				+ this.decalreTempFCDate
				+ this.declareTempFCRemain
				+ this.declareAllGroup
				+ this.decalreTempPOMainNPOInstead
				+ this.decalreTempMainData
				+ this.declareMainMonthly
				+ " \r\n"
				+ "IF OBJECT_ID('tempdb..#TempFCRemain') IS NOT NULL \r\n"
				+ "	DROP TABLE #TempWorkDateRunning;  \r\n"
				+ "IF OBJECT_ID('tempdb..#TempMainData') IS NOT NULL \r\n"
				+ "	DROP TABLE #TempMainData;  \r\n"
				+ " select * from #TempMainMonthly as a\r\n"
				+ " ORDER BY a.GroupNo , a.SubGroup "; 
		List<Map<String, Object>> datas = this.database.queryList(sql);
		list = new ArrayList<>();
		for (Map<String, Object> map : datas) {
			list.add(this.bcModel._genMonthlyCapWithDueDateReportDetail(map));
		}
		return list;
	}

	@Override
	public ArrayList<MonthlyCapWithDueDateReportDetail> getMonthlySumFourthAndFifthAndSixthForExcelDetail(
			ArrayList<InputDateRunningDetail> poList) {
		ArrayList<MonthlyCapWithDueDateReportDetail> list = null;
		InputDateRunningDetail bean = poList.get(0);
		String MMyyyy = bean.getDate();
		String where = "";
		if ( ! where.equals("")) {
			where = " where " + where;
		}
		String begin = "01/" + MMyyyy;
		String declarePlan = ""
				+ " declare @BeginDateFirst date  = convert(date, '" + begin + "', 103) ;\r\n"
				+ " declare @today date  = cast(GETDATE() as date) ;\r\n"
				+ " declare @nullDate date  = cast(NULL as date) ;\r\n";
		String sql = "" + "	SET NOCOUNT ON; " + declarePlan + this.delcareMain
//				+ this.decalreTempGroupWorkDate
				+ this.declareTempWorkDateRunning
				+ this.decalreTempFCDate
				+ this.declareTempFCRemain
				+ this.declareTotalDays
				+ this.declareAllGroup
				+ this.decalreTempPOMainNPOInstead
				+ this.decalreTempMainData
				+ this.declareMainMonthly
				+ "  select  \r\n"
				+ " sum(  FourthTotalWorkDateCap) as SumFourthTotalWorkDate\r\n"
				+ " , sum(  FourthTotalPlanCapOrder) as SumFourthTotalPlanSystemOrder\r\n"
				+ " , sum(  FourthTotalPlanCapForeCast) as SumFourthTotalPlanSystemForeCast\r\n"
				+ " , sum(  FourthRemainCapacityMeter - FourthTotalPlanCapOrder) as SumFourthRemainCapacityMeter\r\n"
				+ "\r\n"
				+ " , sum(  FifthTotalTotalWorkDateCap) as SumFifthTotalWorkDate\r\n"
				+ " , sum(  FifthTotalPlanSystemOrder) as SumFifthTotalPlanSystemOrder\r\n"
				+ " , sum(  FifthTotalTotalPlanCapForeCast) as SumFifthTotalTotalPlanSystemForeCast\r\n"
				+ " , sum(  [FifthRemainCapacityMeter] - FifthTotalPlanSystemOrder) as SumFifthRemainCapacityMeter\r\n"
				+ "\r\n"
				+ " , sum(  SixthTotalTotalWorkDateCap) as SumSixthTotalWorkDate\r\n"
				+ " , sum(  SixthTotalPlanSystemOrder) as SumSixthTotalPlanSystemOrder\r\n"
				+ " , sum(  SixthTotalTotalPlanCapForeCast) as SumSixthTotalTotalPlanSystemForeCast\r\n"
				+ " , sum(  [SixthRemainCapacityMeter] - SixthTotalPlanSystemOrder) as SumSixthRemainCapacityMeter\r\n"
				+ "  from ( \r\n"
				+ "  SELECT \r\n"
				+ "    a.FourthTotalLotWorkDate  * MeterPerLot AS FourthTotalWorkDateCap\r\n"
				+ "   , ( a.[FourthTotalPlanSystemDatePO]+[FourthTotalPlanSystemDateRedye] )   * MeterPerLot AS FourthTotalPlanCapOrder\r\n"
				+ "   , ( a.[FourthTotalPlanSystemDateForecast]  * MeterPerLot ) AS FourthTotalPlanCapForeCast\r\n"
				+ "   , ( a.[FourthRemainCapacityMeter]   ) as FourthRemainCapacityMeter \r\n"
				+ "   \r\n"
				+ "   , a.FifthTotalLotWorkDate   * MeterPerLot AS FifthTotalTotalWorkDateCap\r\n"
				+ "   , ( a.[FifthTotalPlanSystemDatePO]+[FifthTotalPlanSystemDateRedye] ) * MeterPerLot  AS FifthTotalPlanSystemOrder\r\n"
				+ "   , ( a.[FifthTotalPlanSystemDateForecast]  * MeterPerLot ) AS FifthTotalTotalPlanCapForeCast\r\n"
				+ "   , (  a.[FifthRemainCapacityMeter] ) as FifthRemainCapacityMeter\r\n"
				+ "   \r\n"
				+ "   , a.SixthTotalLotWorkDate   * MeterPerLot AS SixthTotalTotalWorkDateCap\r\n"
				+ "   , ( a.[SixthTotalPlanSystemDatePO]+[SixthTotalPlanSystemDateRedye] ) * MeterPerLot  AS SixthTotalPlanSystemOrder\r\n"
				+ "   , ( a.[SixthTotalPlanSystemDateForecast]  * MeterPerLot ) AS SixthTotalTotalPlanCapForeCast\r\n"
				+ "   , (  a.[SixthRemainCapacityMeter]   ) as SixthRemainCapacityMeter\r\n"
				+ "  FROM #TempMainMonthly   as a\r\n"
				+ "  ) AS MAIN  \r\n"
				+ "\r\n"
				+ "\r\n"; 
		List<Map<String, Object>> datas = this.database.queryList(sql);
		list = new ArrayList<>();
		for (Map<String, Object> map : datas) {
			list.add(this.bcModel._genMonthlyCapWithDueDateReportDetail(map));
		}
		return list;
	}

	@Override
	public ArrayList<PlanningReportDetail> getPlanningReportDetailForProductionOrder(
			ArrayList<InputDateRunningDetail> poList) {
		ArrayList<PlanningReportDetail> list = null;
		InputDateRunningDetail bean = poList.get(0);
		String MMyyyy = bean.getDate();
		String where = "";
		if ( ! where.equals("")) {
			where = " where " + where;
		}
		String begin = "01/" + MMyyyy;
		String declarePlan = ""
				+ " declare @BeginDateFirst date  = convert(date, '"
				+ begin
				+ "', 103) ;\r\n"
				+ " declare @today date  = cast(GETDATE() as date) ;\r\n"
				+ " declare @nullDate date  = cast(NULL as date) ;\r\n";
		String sql = "" + "	SET NOCOUNT ON; " + declarePlan + this.delcareMain
//				+ this.decalreTempGroupWorkDate
				+ this.declareTempWorkDateRunning
				+ this.decalreTempFCDate
				+ this.declareTempFCRemain
				+ this.declareTotalDays
				+ this.declareAllGroup
				+ this.decalreTempPOMainNPOInstead
				+ " SELECT distinct B.GroupNo ,b.SubGroup ,a.ProductionOrder\r\n"
				+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
				+ "		inner join #tempPOMainNPOInstead as b on a.TempProdId = b.id\r\n"
				+ "		where a.[PlanSystemDate] is null AND \r\n"
				+ "				(  \r\n"
				+ "			  		b.[DueDate] <= @LastThirdMonth\r\n"
				+ "				)  and\r\n"
				+ "			  b.GroupNo is null\r\n"
				+ "	union \r\n"
				+ "	SELECT distinct B.GroupNo ,b.SubGroup ,a.ProductionOrder\r\n"
				+ "		FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
				+ "		inner join [PPMM].[dbo].[PlanLotPOAddDetail] as b on a.TempPOAddId = b.id\r\n"
				+ "		where a.[PlanSystemDate] is null AND\r\n"
				+ "           B.[DataStatus] = 'O' AND\r\n"
				+ "			  (   \r\n"
				+ "					b.[DueDate] <= @LastThirdMonth  \r\n"
				+ "			  ) and \r\n"
				+ "			  b.GroupNo is null\r\n"
				+ "	union\r\n"
				+ "	SELECT distinct b.GroupNo ,b.SubGroup ,a.ProductionOrder\r\n"
				+ "	FROM [PPMM].[dbo].[TEMP_PlanningLot] AS A\r\n"
				+ "	INNER JOIN [PPMM].[dbo].[PlanLotRedyeDetail] AS B ON A.RedyeId = b.Id\r\n"
				+ "	WHERE A.DataStatus = 'O' and \r\n"
				+ "		a.[GroupNo] is null and \r\n"
				+ "		b.[GroupNo] is null and  \r\n"
				+ "		b.[DueDate] <= @LastThirdMonth AND  \r\n"
				+ "		A.ReDyeId IS NOT NULL and \r\n"
				+ "		b.DataStatus = 'O' AND\r\n"
				+ "		a.[PlanSystemDate] is null\r\n"
				+ "  ORDER BY b.GroupNo , b.SubGroup ";
		List<Map<String, Object>> datas = this.database.queryList(sql);
		list = new ArrayList<>();
		for (Map<String, Object> map : datas) {
			list.add(this.bcModel._genPlanningReportDetail(map));
		}
		return list;
	}

	@Override
	public ArrayList<SummaryMonthlyCapReportDetail> getSummaryMonthlyCapReportDetail(
			ArrayList<InputDateRunningDetail> poList) {
		ArrayList<SummaryMonthlyCapReportDetail> list = null;
		InputDateRunningDetail bean = poList.get(0);
		String MMyyyy = bean.getDate();
		String where = "";
		if ( ! where.equals("")) {
			where = " where " + where;
		}
		String begin = "01/" + MMyyyy;
		String declarePlan = ""
				+ " declare @BeginDateFirst date  = convert(date, '"
				+ begin
				+ "', 103) ;\r\n"
				+ " declare @today date  = cast(GETDATE() as date) ;\r\n"
				+ " declare @nullDate date  = cast(NULL as date) ;\r\n";
		String sql = "" + "	SET NOCOUNT ON; " + declarePlan + this.delcareMain
//				+ this.decalreTempGroupWorkDate
				+ this.declareTempWorkDateRunning
				+ this.declareTotalDays
				+ this.decalreTempFCDate
				+ this.declareTempFCRemain
				+ this.declareAllGroup
				+ this.decalreTempPOMainNPOInstead
				+ this.decalreTempMainData
				+ this.declareTempTotalPO
				+ this.declareMainMonthly  
				+ "\r\n"
				+ " IF OBJECT_ID('tempdb..#TempWorkDateRunning') IS NOT NULL \r\n"
				+ "	DROP TABLE #TempWorkDateRunning;\r\n"
				+ " IF OBJECT_ID('tempdb..#TempMainData') IS NOT NULL \r\n"
				+ "	DROP TABLE #TempMainData;   \r\n"
				+ " IF OBJECT_ID('tempdb..#TempTest') IS NOT NULL \r\n"
				+ "	DROP TABLE #TempTest; \r\n" 
				+ " CREATE TABLE #TempTest (\r\n"
				+ "     StartDate Date,\r\n"
				+ "    	EndDate Date,\r\n"
				+ " 	StartMonth varchar(50),\r\n"
				+ "	    TotalDays int,\r\n"
				+ "	    TotalPO decimal(16,3),\r\n"
				+ "	    TotalRedye decimal(16,3),\r\n"
				+ "	    TotalBLQty decimal(16,3),\r\n"
				+ "   	TotalNonBLQty decimal(16,3) ,\r\n"
				+ " 	TotalAllCapQty decimal(16,3)\r\n" 
				+ ");\r\n" 
				+ "	INSERT into #TempTest( \r\n"
				+ "	StartDate , \r\n"
				+ "	EndDate ,\r\n"
				+ "	StartMonth,\r\n"
				+ "	TotalDays,\r\n"
				+ "	TotalPO,\r\n"
				+ "	TotalRedye,\r\n"
				+ "	TotalBLQty,\r\n"
				+ "	TotalNonBLQty ,\r\n"
				+ "	TotalAllCapQty )\r\n"
				+ "	  values( @BeginFirstMonth , @LastFirstMonth ,RIGHT('00' + cast(month(@BeginDateFirst) as varchar(2)),2) +'/'+CAST( year(@BeginDateFirst) as varchar(4))\r\n"
				+ "	  , @FirstTotalDays\r\n"
				+ "	  , ISNULL(  (  \r\n"
				+ "		 SELECT   \r\n"
				+ "		    SUM( FirstTotalPlanSystemDatePO*MeterPerLot ) AS FirstDateTotalPO  \r\n"
				+ "		 FROM #TempMainMonthly \r\n"
				+ "		) ,0 )\r\n"
				+ "	  , ISNULL(  (  \r\n"
				+ "		  SELECT SUM(FirstTotalPlanSystemDateRedye*MeterPerLot) AS FirstDateTotalRedye \r\n"
				+ "		  FROM #TempMainMonthly \r\n"
				+ "		)  ,0 )\r\n"
				+ "	  , ISNULL(  ( \r\n"
				+ "			SELECT distinct sum(TotalBLQty ) as TotalBLQty \r\n"
				+ "			FROM #TempFCRemain AS A \r\n"
				+ "			where  A.ForecastDate <= @LastFirstMonth   \r\n"
				+ "		) ,0 )\r\n"
				+ "	  , ISNULL(  ( \r\n"
				+ "			SELECT distinct sum(TotalNonBLQty ) as TotalNonBLQty\r\n"
				+ "			FROM #TempFCRemain AS A \r\n"
				+ "			where  A.ForecastDate <= @LastFirstMonth  \r\n"
				+ "		) ,0 )\r\n"
				+ "		,ISNULL ( \r\n"
				+ "			(\r\n"
				+ "			 SELECT  \r\n"
				+ "				SUM(FirstTotalLotWorkDate*MeterPerLot) AS FirstDateTotalAll \r\n"
				+ "			 FROM #TempMainMonthly \r\n"
				+ "			) ,0 )\r\n"
				+ "	  )\r\n"
				+ "	INSERT into #TempTest( \r\n"
				+ "	StartDate , \r\n"
				+ "	EndDate ,\r\n"
				+ "	StartMonth,\r\n"
				+ "	TotalDays,\r\n"
				+ "	TotalPO,\r\n"
				+ "	TotalRedye,\r\n"
				+ "	TotalBLQty,\r\n"
				+ "	TotalNonBLQty,\r\n"
				+ "	TotalAllCapQty  )\r\n"
				+ "	  values( @BeginSecondMonth "
				+ "		, @LastSecondMonth,RIGHT('00' + cast(month(@BeginDateSecond) as varchar(2)),2) +'/'+CAST( year(@BeginDateSecond) as varchar(4)) \r\n"
				+ "	    , @SecondTotalDays\r\n"
				+ "	    , ISNULL(  (  \r\n"
				+ "		 SELECT   \r\n"
				+ "		    SUM( SecondTotalPlanSystemDatePO*MeterPerLot ) AS SecondDateTotalPO  \r\n"
				+ "		 FROM #TempMainMonthly \r\n"
				+ "		) ,0 )\r\n"
				+ "	  , ISNULL(  (  \r\n"
				+ "		  SELECT SUM(SecondTotalPlanSystemDateRedye*MeterPerLot) AS SecondDateTotalRedye \r\n"
				+ "		  FROM #TempMainMonthly \r\n"
				+ "		)  ,0 )\r\n"
				+ "	  , ISNULL(  ( \r\n"
				+ "			SELECT distinct sum(TotalBLQty ) as TotalBLQty \r\n"
				+ "			FROM #TempFCRemain AS A \r\n"
				+ "			where A.ForecastDate >= @BeginSecondMonth  and \r\n"
				+ "				  A.ForecastDate <= @LastSecondMonth  \r\n"
				+ "		) ,0 )\r\n"
				+ "	  , ISNULL(  ( \r\n"
				+ "			SELECT distinct sum(TotalNonBLQty ) as TotalNonBLQty\r\n"
				+ "			FROM #TempFCRemain AS A \r\n"
				+ "			where A.ForecastDate >= @BeginSecondMonth  and \r\n"
				+ "				  A.ForecastDate <= @LastSecondMonth  \r\n"
				+ "		) ,0 )\r\n"
				+ "		,ISNULL ( \r\n"
				+ "			(\r\n"
				+ "			 SELECT  \r\n"
				+ "				SUM(SecondTotalLotWorkDate*MeterPerLot) AS SecondDateTotalAll \r\n"
				+ "			 FROM #TempMainMonthly \r\n"
				+ "			) ,0 )\r\n" 
				+ "	)  \r\n"
				+ "	INSERT into #TempTest( \r\n"
				+ "	StartDate , \r\n"
				+ "	EndDate ,\r\n"
				+ "	StartMonth,\r\n"
				+ "	TotalDays,\r\n"
				+ "	TotalPO,\r\n"
				+ "	TotalRedye,\r\n"
				+ "	TotalBLQty,\r\n"
				+ "	TotalNonBLQty,\r\n"
				+ "	TotalAllCapQty  )\r\n"
				+ "	  values( @BeginThirdMonth , @LastThirdMonth,RIGHT('00' + cast(month(@BeginDateThird) as varchar(2)),2) +'/'+CAST( year(@BeginDateThird) as varchar(4))  \r\n"
				+ "	    , @ThirdTotalDays\r\n"
				+ "	  , ISNULL(  (  \r\n"
				+ "		 SELECT   \r\n"
				+ "		    SUM( ThirdTotalPlanSystemDatePO*MeterPerLot ) AS ThirdDateTotalPO  \r\n"
				+ "		 FROM #TempMainMonthly \r\n"
				+ "		) ,0 )\r\n"
				+ "	  , ISNULL(  (  \r\n"
				+ "		  SELECT SUM(ThirdTotalPlanSystemDateRedye*MeterPerLot) AS ThirdDateTotalRedye \r\n"
				+ "		  FROM #TempMainMonthly \r\n"
				+ "		)  ,0 )\r\n"
				+ "	  ,  ISNULL( ( \r\n"
				+ "			SELECT distinct sum(TotalBLQty ) as TotalBLQty \r\n"
				+ "			FROM #TempFCRemain AS A \r\n"
				+ "			where A.ForecastDate >= @BeginThirdMonth  and \r\n"
				+ "				  A.ForecastDate <= @LastThirdMonth  \r\n"
				+ "		) ,0 )\r\n"
				+ "	  , ISNULL( \r\n"
				+ "		( \r\n"
				+ "			SELECT distinct sum(TotalNonBLQty ) as TotalNonBLQty\r\n"
				+ "			FROM #TempFCRemain AS A \r\n"
				+ "			where A.ForecastDate >= @BeginThirdMonth  and \r\n"
				+ "				  A.ForecastDate <= @LastThirdMonth  \r\n"
				+ "		) ,0 )\r\n"
				+ "		,ISNULL ( \r\n"
				+ "			(\r\n"
				+ "			 SELECT  \r\n"
				+ "				SUM(ThirdTotalLotWorkDate*MeterPerLot) AS ThirdDateTotalAll \r\n"
				+ "			 FROM #TempMainMonthly \r\n"
				+ "			) ,0 )\r\n"
				+ "	) \r\n"
				+ " IF OBJECT_ID('tempdb..#TempMainMonthly') IS NOT NULL \r\n"
				+ " 	DROP TABLE #TempMainMonthly; \r\n"
				+ " IF OBJECT_ID('tempdb..#TempFCRemain') IS NOT NULL \r\n"
				+ " 	DROP TABLE #TempFCRemain; \r\n"
				+ "	 select \r\n"
				+ "	 CAST( ROW_NUMBER() OVER ( \r\n"
				+ "              ORDER BY EndDate ASC \r\n"
				+ "        ) AS INT) AS No,\r\n"
				+ "	 EndDate\r\n"
				+ "	 ,(  TotalPO+TotalRedye+TotalBLQty+TotalNonBLQty ) AS TotalAllCapWork \r\n"
				+ "	 , StartMonth as DateBeginLast \r\n"
				+ "	 , TotalDays as DaysRemainning \r\n"
				+ "	 , TotalPO as TotalPlanSystemDatePO\r\n"
				+ "	 , TotalRedye as TotalPlanSystemDateRedye\r\n"
				+ "	 , TotalBLQty as TotalFCBL\r\n"
				+ "	 , TotalNonBLQty as TotalFCNonBL \r\n"
				+ "	 , TotalAllCapQty as TotalRemain \r\n" 
				+ " \r\n"
				+ "	from #TempTest\r\n" ; 
		List<Map<String, Object>> datas = this.database.queryList(sql);
		list = new ArrayList<>();
		for (Map<String, Object> map : datas) {
			list.add(this.bcModel._genSummaryMonthlyCapReportDetail(map));
		}
		return list;
	}

}